{"version":3,"sources":["RadioButton.tsx"],"names":["RadioButton","Icon","disabled","color","value","selected","unselectedColor","onPress","size","Config","radioButtonSize","selectedIcon","unselectedIcon","style","rest","contextValue","onValueChange","handlePress","isSelected"],"mappings":";;;;;;;AAAA;;AAGA;;AACA;;AACA;;;;;;;;;;AAiBA,MAAMA,WAAuC,GAAG,QAa1C;AAAA,MAb2C;AAC/CC,IAAAA,IAD+C;AAE/CC,IAAAA,QAAQ,GAAG,KAFoC;AAG/CC,IAAAA,KAH+C;AAI/CC,IAAAA,KAJ+C;AAK/CC,IAAAA,QAL+C;AAM/CC,IAAAA,eAN+C;AAO/CC,IAAAA,OAAO,GAAG,MAAM,CAAE,CAP6B;AAQ/CC,IAAAA,IAAI,GAAGC,gBAAOC,eARiC;AAS/CC,IAAAA,YAAY,GAAG,oCATgC;AAU/CC,IAAAA,cAAc,GAAG,sCAV8B;AAW/CC,IAAAA,KAX+C;AAY/C,OAAGC;AAZ4C,GAa3C;AACJ,QAAM;AAAEV,IAAAA,KAAK,EAAEW,YAAT;AAAuBC,IAAAA;AAAvB,MAAyC,0CAA/C;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBV,IAAAA,OAAO,IAAIA,OAAO,EAAlB;;AAEA,QAAIS,aAAa,IAAIZ,KAArB,EAA4B;AAC1BY,MAAAA,aAAa,CAACZ,KAAD,CAAb;AACD;AACF,GAND;;AAQA,QAAMc,UAAU,GACdb,QAAQ,IAAKU,YAAY,IAAI,IAAhB,IAAwBA,YAAY,KAAKX,KADxD;AAGA,sBACE,oBAAC,mBAAD;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,IAAI,EAAEiB,UAAU,GAAGP,YAAH,GAAkBC,cAFpC;AAGE,IAAA,KAAK,EAAEM,UAAU,GAAGf,KAAH,GAAWG,eAH9B;AAIE,IAAA,QAAQ,EAAEJ,QAJZ;AAKE,IAAA,OAAO,EAAEe,WALX;AAME,IAAA,IAAI,EAAET,IANR;AAOE,IAAA,KAAK,EAAEK;AAPT,KAQMC,IARN,EADF;AAYD,CAvCD;;eAyCed,W","sourcesContent":["import * as React from \"react\";\nimport { StyleProp, ViewStyle } from \"react-native\";\n\nimport Config from \"../Config\";\nimport IconButton from \"../IconButton\";\nimport { useRadioButtonGroupContext } from \"./context\";\n\nimport type { IconSlot } from \"../../interfaces/Icon\";\n\nexport type RadioButtonProps = {\n  selected?: boolean;\n  disabled?: boolean;\n  color?: string;\n  value?: string;\n  unselectedColor?: string;\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  size?: number;\n  selectedIcon?: string;\n  unselectedIcon?: string;\n} & IconSlot;\n\nconst RadioButton: React.FC<RadioButtonProps> = ({\n  Icon,\n  disabled = false,\n  color,\n  value,\n  selected,\n  unselectedColor,\n  onPress = () => {},\n  size = Config.radioButtonSize,\n  selectedIcon = \"MaterialIcons/radio-button-checked\",\n  unselectedIcon = \"MaterialIcons/radio-button-unchecked\",\n  style,\n  ...rest\n}) => {\n  const { value: contextValue, onValueChange } = useRadioButtonGroupContext();\n\n  const handlePress = () => {\n    onPress && onPress();\n\n    if (onValueChange && value) {\n      onValueChange(value);\n    }\n  };\n\n  const isSelected =\n    selected || (contextValue != null && contextValue === value);\n\n  return (\n    <IconButton\n      Icon={Icon}\n      icon={isSelected ? selectedIcon : unselectedIcon}\n      color={isSelected ? color : unselectedColor}\n      disabled={disabled}\n      onPress={handlePress}\n      size={size}\n      style={style}\n      {...rest}\n    />\n  );\n};\n\nexport default RadioButton;\n"]}