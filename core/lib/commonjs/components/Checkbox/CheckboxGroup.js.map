{"version":3,"sources":["CheckboxGroup.tsx"],"names":["Provider","checkboxGroupContext","CheckboxGroup","direction","Direction","Vertical","values","onValueChange","style","children","rest","_containerStyle","flexDirection","Horizontal","overflow","push","alignItems","minHeight"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAWA,MAAM;AAAEA,EAAAA;AAAF,IAAeC,6BAArB;;AAEA,MAAMC,aAA2C,GAAG,QAO9C;AAAA,MAP+C;AACnDC,IAAAA,SAAS,GAAGC,mBAAUC,QAD6B;AAEnDC,IAAAA,MAFmD;AAGnDC,IAAAA,aAAa,GAAG,MAAM,CAAE,CAH2B;AAInDC,IAAAA,KAJmD;AAKnDC,IAAAA,QALmD;AAMnD,OAAGC;AANgD,GAO/C;AACJ,QAAMC,eAAqC,GAAG,CAC5C;AACEC,IAAAA,aAAa,EAAET,SAAS,KAAKC,mBAAUS,UAAxB,GAAqC,KAArC,GAA6C,QAD9D;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAD4C,CAA9C;;AAOA,MAAIX,SAAS,KAAKC,mBAAUC,QAA5B,EAAsC;AACpCM,IAAAA,eAAe,CAACI,IAAhB,CAAqB;AACnBC,MAAAA,UAAU,EAAE;AADO,KAArB;AAGD;;AAED,sBACE,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAD,EAAoBT,KAApB;AAAb,KAA6CE,IAA7C,gBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEJ,MAAAA,MAAF;AAAUC,MAAAA,aAAV;AAAyBJ,MAAAA;AAAzB;AAAjB,kBACE,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAEQ;AAAb,KAA+BF,QAA/B,CADF,CADF,CADF;AAOD,CA5BD;;eA8BeP,a","sourcesContent":["import * as React from \"react\";\nimport { View, StyleProp, ViewStyle } from \"react-native\";\nimport type { Theme } from \"../../styles/DefaultTheme\";\nimport { checkboxGroupContext, Direction } from \"./context\";\n\nexport interface CheckboxGroupProps {\n  direction?: Direction;\n  style?: StyleProp<ViewStyle>;\n  values: string[];\n  onValueChange: (value: string, selected: boolean) => void;\n  theme: Theme;\n  children: React.ReactNode;\n}\n\nconst { Provider } = checkboxGroupContext;\n\nconst CheckboxGroup: React.FC<CheckboxGroupProps> = ({\n  direction = Direction.Vertical,\n  values,\n  onValueChange = () => {},\n  style,\n  children,\n  ...rest\n}) => {\n  const _containerStyle: StyleProp<ViewStyle> = [\n    {\n      flexDirection: direction === Direction.Horizontal ? \"row\" : \"column\",\n      overflow: \"hidden\",\n    },\n  ];\n\n  if (direction !== Direction.Vertical) {\n    _containerStyle.push({\n      alignItems: \"center\",\n    });\n  }\n\n  return (\n    <View style={[{ minHeight: 40 }, style]} {...rest}>\n      <Provider value={{ values, onValueChange, direction }}>\n        <View style={_containerStyle}>{children}</View>\n      </Provider>\n    </View>\n  );\n};\n\nexport default CheckboxGroup;\n"]}