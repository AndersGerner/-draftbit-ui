{"version":3,"sources":["Surface.tsx"],"names":["Surface","elevation","style","theme","children","rest","styleElevation","borderRadius","radius","StyleSheet","flatten","dark","isDarkTheme","mode","colors","ele","backgroundColor","surface"],"mappings":";;;;;;;AACA;;AACA;;AAOA;;AACA;;AACA;;;;;;;;;;AASA,MAAMA,OAAwB,GAAG,QAM3B;AAAA,MAN4B;AAChCC,IAAAA,SADgC;AAEhCC,IAAAA,KAFgC;AAGhCC,IAAAA,KAHgC;AAIhCC,IAAAA,QAJgC;AAKhC,OAAGC;AAL6B,GAM5B;AACJ,QAAM;AAAEJ,IAAAA,SAAS,EAAEK,cAAc,GAAG,CAA9B;AAAiCC,IAAAA,YAAY,EAAEC,MAAM,GAAG;AAAxD,MACHC,wBAAWC,OAAX,CAAmBR,KAAnB,KAA6B,EADhC;AAEA,QAAM;AAAES,IAAAA,IAAI,EAAEC,WAAR;AAAqBC,IAAAA,IAArB;AAA2BC,IAAAA;AAA3B,MAAsCX,KAA5C;AACA,QAAMI,YAAY,GAAGC,MAArB;AACA,QAAMO,GAAG,GAAGd,SAAS,IAAIK,cAAzB;AAEA,sBACE,oBAAC,qBAAD,CAAU,IAAV,eACMD,IADN;AAEE,IAAA,KAAK,EAAE,CACL;AACEE,MAAAA,YADF;AAEES,MAAAA,eAAe,EACbJ,WAAW,IAAIC,IAAI,KAAK,UAAxB,GACI,sBAAQE,GAAR,EAAaD,MAAM,CAACG,OAApB,CADJ,GAEIH,MAAM,CAACG;AALf,KADK,EAQLhB,SAAS,GAAG,qBAAOA,SAAP,CAAH,GAAuB,IAR3B,EASLC,KATK;AAFT,MAcGE,QAdH,CADF;AAkBD,CA/BD;;eAiCe,wBAAUJ,OAAV,C","sourcesContent":["/* Copied from https://github.com/callstack/react-native-paper/blob/main/src/components/Surface.tsx */\nimport * as React from \"react\";\nimport {\n  Animated,\n  StyleSheet,\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n} from \"react-native\";\nimport shadow from \"../styles/shadow\";\nimport overlay from \"../styles/overlay\";\nimport { withTheme } from \"../theming\";\nimport type { Theme } from \"../styles/DefaultTheme\";\n\ntype Props = {\n  elevation?: number;\n  style?: StyleProp<ViewStyle>;\n  theme: Theme;\n} & ViewProps;\n\nconst Surface: React.FC<Props> = ({\n  elevation,\n  style,\n  theme,\n  children,\n  ...rest\n}) => {\n  const { elevation: styleElevation = 3, borderRadius: radius = 0 } =\n    (StyleSheet.flatten(style) || {}) as ViewStyle;\n  const { dark: isDarkTheme, mode, colors } = theme;\n  const borderRadius = radius;\n  const ele = elevation || styleElevation;\n\n  return (\n    <Animated.View\n      {...rest}\n      style={[\n        {\n          borderRadius,\n          backgroundColor:\n            isDarkTheme && mode === \"adaptive\"\n              ? overlay(ele, colors.surface)\n              : colors.surface,\n        },\n        elevation ? shadow(elevation) : null,\n        style,\n      ]}\n    >\n      {children}\n    </Animated.View>\n  );\n};\n\nexport default withTheme(Surface);\n"]}