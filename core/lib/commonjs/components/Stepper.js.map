{"version":3,"sources":["Stepper.tsx"],"names":["Stepper","Icon","value","style","onChange","defaultValue","theme","colors","typography","roundness","iconSize","iconColor","strong","borderRadius","typeStyle","stateValue","setStateValue","React","useState","useEffect","handleMinus","handlePlus","flexDirection","body1","textAlign","alignSelf","color","medium","marginHorizontal"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAIA;;;;;;;;AAcA,MAAMA,OAAwB,GAAG,QAW3B;AAAA,MAX4B;AAChCC,IAAAA,IADgC;AAEhCC,IAAAA,KAFgC;AAGhCC,IAAAA,KAHgC;AAIhCC,IAAAA,QAJgC;AAKhCC,IAAAA,YALgC;AAMhCC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,UAAV;AAAsBC,MAAAA;AAAtB,KANyB;AAOhCC,IAAAA,QAAQ,GAAG,EAPqB;AAQhCC,IAAAA,SAAS,GAAGJ,MAAM,CAACK,MARa;AAShCC,IAAAA,YAAY,GAAGJ,SATiB;AAUhCK,IAAAA;AAVgC,GAW5B;AACJ,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,KAAK,CAACC,QAAN,CAClChB,KAAK,IAAIG,YAAT,IAAyB,CADS,CAApC;AAIAY,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpB,QAAIjB,KAAK,IAAI,IAAb,EAAmB;AACjBc,MAAAA,aAAa,CAACd,KAAD,CAAb;AACD;AACF,GAJD,EAIG,CAACA,KAAD,CAJH;AAMAe,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpB,QAAId,YAAY,IAAI,IAApB,EAA0B;AACxBW,MAAAA,aAAa,CAACX,YAAD,CAAb;AACD;AACF,GAJD,EAIG,CAACA,YAAD,CAJH;;AAMA,QAAMe,WAAW,GAAG,MAAM;AACxB,QAAIlB,KAAK,IAAIA,KAAK,KAAK,CAAvB,EAA0B;AACxBE,MAAAA,QAAQ,IAAIA,QAAQ,CAACF,KAAK,GAAG,CAAT,CAApB;AACD,KAFD,MAEO;AACLc,MAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACD;AACF,GAND;;AAQA,QAAMM,UAAU,GAAG,MAAM;AACvB,QAAInB,KAAK,IAAIA,KAAK,KAAK,CAAvB,EAA0B;AACxBE,MAAAA,QAAQ,IAAIA,QAAQ,CAACF,KAAK,GAAG,CAAT,CAApB;AACD,KAFD,MAEO;AACLc,MAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACD;AACF,GAND;;AAQA,sBACE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACL;AAAEO,MAAAA,aAAa,EAAE;AAAjB,KADK,EAELnB,KAFK,EAGLU,YAAY,GAAG;AAAEA,MAAAA;AAAF,KAAH,GAAsB,EAH7B;AADT,kBAOE,oBAAC,mBAAD;AACE,IAAA,IAAI,EAAEZ,IADR;AAEE,IAAA,IAAI,EAAC,sBAFP;AAGE,IAAA,OAAO,EAAEmB,WAHX;AAIE,IAAA,IAAI,EAAEV,QAJR;AAKE,IAAA,KAAK,EAAEC,SALT;AAME,IAAA,QAAQ,EAAET,KAAK,GAAGA,KAAK,KAAK,CAAb,GAAiBa,UAAU,KAAK;AANjD,IAPF,eAeE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLP,UAAU,CAACe,KADN,EAEL;AACEC,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,SAAS,EAAE,QAFb;AAGEC,MAAAA,KAAK,EAAEnB,MAAM,CAACoB,MAHhB;AAIEC,MAAAA,gBAAgB,EAAE;AAJpB,KAFK,EAQLd,SARK;AADT,KAYGZ,KAAK,IAAIa,UAZZ,CAfF,eA6BE,oBAAC,mBAAD;AACE,IAAA,IAAI,EAAEd,IADR;AAEE,IAAA,IAAI,EAAC,mBAFP;AAGE,IAAA,OAAO,EAAEoB,UAHX;AAIE,IAAA,IAAI,EAAEX,QAJR;AAKE,IAAA,KAAK,EAAEC;AALT,IA7BF,CADF;AAuCD,CAnFD;;eAqFe,wBAAUX,OAAV,C","sourcesContent":["import * as React from \"react\";\nimport { View, Text, StyleProp, ViewStyle, TextStyle } from \"react-native\";\nimport { withTheme } from \"../theming\";\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport type { IconSlot } from \"../interfaces/Icon\";\n\nimport IconButton from \"./IconButton\";\n\ntype Props = {\n  value?: number;\n  theme: Theme;\n  style?: StyleProp<ViewStyle>;\n  onChange?: (value: number) => void;\n  defaultValue?: number;\n  iconSize?: number;\n  iconColor?: string;\n  borderRadius?: number;\n  typeStyle?: StyleProp<TextStyle>;\n} & IconSlot;\n\nconst Stepper: React.FC<Props> = ({\n  Icon,\n  value,\n  style,\n  onChange,\n  defaultValue,\n  theme: { colors, typography, roundness },\n  iconSize = 24,\n  iconColor = colors.strong,\n  borderRadius = roundness,\n  typeStyle,\n}) => {\n  const [stateValue, setStateValue] = React.useState(\n    value || defaultValue || 0\n  );\n\n  React.useEffect(() => {\n    if (value != null) {\n      setStateValue(value);\n    }\n  }, [value]);\n\n  React.useEffect(() => {\n    if (defaultValue != null) {\n      setStateValue(defaultValue);\n    }\n  }, [defaultValue]);\n\n  const handleMinus = () => {\n    if (value || value === 0) {\n      onChange && onChange(value - 1);\n    } else {\n      setStateValue(stateValue - 1);\n    }\n  };\n\n  const handlePlus = () => {\n    if (value || value === 0) {\n      onChange && onChange(value + 1);\n    } else {\n      setStateValue(stateValue + 1);\n    }\n  };\n\n  return (\n    <View\n      style={[\n        { flexDirection: \"row\" },\n        style,\n        borderRadius ? { borderRadius } : {},\n      ]}\n    >\n      <IconButton\n        Icon={Icon}\n        icon=\"MaterialIcons/remove\"\n        onPress={handleMinus}\n        size={iconSize}\n        color={iconColor}\n        disabled={value ? value === 0 : stateValue === 0}\n      />\n      <Text\n        style={[\n          typography.body1,\n          {\n            textAlign: \"center\",\n            alignSelf: \"center\",\n            color: colors.medium,\n            marginHorizontal: 8,\n          },\n          typeStyle,\n        ]}\n      >\n        {value || stateValue}\n      </Text>\n      <IconButton\n        Icon={Icon}\n        icon=\"MaterialIcons/add\"\n        onPress={handlePlus}\n        size={iconSize}\n        color={iconColor}\n      />\n    </View>\n  );\n};\n\nexport default withTheme(Stepper);\n"]}