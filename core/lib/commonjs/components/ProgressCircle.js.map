{"version":3,"sources":["ProgressCircle.tsx"],"names":["ProgressCircle","progress","style","color","size","showsText","unfilledColor","strokeCap","textStyle","thickness","theme","progressNum","Math","round","tintColor","colors","primary","backgroundColor","secondary","fill","fontSize"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAiBA,MAAMA,cAA+B,GAAG,QAWlC;AAAA,MAXmC;AACvCC,IAAAA,QAAQ,GAAG,GAD4B;AAEvCC,IAAAA,KAFuC;AAGvCC,IAAAA,KAAK,GAAG,SAH+B;AAIvCC,IAAAA,IAAI,GAAG,GAJgC;AAKvCC,IAAAA,SAAS,GAAG,IAL2B;AAMvCC,IAAAA,aANuC;AAOvCC,IAAAA,SAAS,GAAG,MAP2B;AAQvCC,IAAAA,SARuC;AASvCC,IAAAA,SAAS,GAAG,CAT2B;AAUvCC,IAAAA;AAVuC,GAWnC;AACJ,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWZ,QAAQ,GAAG,GAAtB,CAApB;AAEA,QAAMa,SAAS,GAAGX,KAAK,IAAIO,KAAK,CAACK,MAAN,CAAaC,OAAxC;AACA,QAAMC,eAAe,GAAGX,aAAa,IAAII,KAAK,CAACK,MAAN,CAAaG,SAAtD;AAEA,sBACE,oBAAC,iCAAD;AACE,IAAA,IAAI,EAAEd,IADR;AAEE,IAAA,KAAK,EAAEK,SAFT;AAGE,IAAA,eAAe,EAAEA,SAHnB;AAIE,IAAA,IAAI,EAAEE,WAJR;AAKE,IAAA,SAAS,EAAEG,SALb;AAME,IAAA,eAAe,EAAEG,eANnB;AAOE,IAAA,QAAQ,EAAE,CAPZ;AAQE,IAAA,OAAO,EAAEV,SARX;AASE,IAAA,KAAK,EAAEL;AATT,KAWIiB,IAAD,IACCd,SAAS,gBACP,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CAAC;AAAEe,MAAAA,QAAQ,EAAEhB,IAAI,GAAG,KAAnB;AAA0BD,MAAAA,KAAK,EAAEW;AAAjC,KAAD,EAA+CN,SAA/C;AADT,KAGGI,IAAI,CAACC,KAAL,CAAWM,IAAX,CAHH,MADO,GAML,IAlBR,CADF;AAuBD,CAxCD;;eA0Ce,wBAAUnB,cAAV,C","sourcesContent":["import * as React from \"react\";\nimport { Text, StyleProp, ViewStyle, TextStyle } from \"react-native\";\nimport AnimatedCircularProgress from \"./AnimatedCircularProgress\";\nimport { withTheme } from \"../theming\";\nimport themeT from \"../styles/DefaultTheme\";\nimport { colorTypes } from \"@draftbit/types\";\n\ntype Props = {\n  progress?: number;\n  style?: StyleProp<ViewStyle>;\n  color?: colorTypes;\n  size?: number;\n  showsText?: boolean;\n  unfilledColor?: colorTypes;\n  strokeCap?: \"butt\" | \"square\" | \"round\" | undefined;\n  textStyle?: StyleProp<TextStyle>;\n  thickness?: number;\n  theme: typeof themeT;\n};\n\nconst ProgressCircle: React.FC<Props> = ({\n  progress = 0.5,\n  style,\n  color = \"primary\",\n  size = 100,\n  showsText = true,\n  unfilledColor,\n  strokeCap = \"butt\",\n  textStyle,\n  thickness = 1,\n  theme,\n}) => {\n  const progressNum = Math.round(progress * 100);\n\n  const tintColor = color || theme.colors.primary;\n  const backgroundColor = unfilledColor || theme.colors.secondary;\n\n  return (\n    <AnimatedCircularProgress\n      size={size}\n      width={thickness}\n      backgroundWidth={thickness}\n      fill={progressNum}\n      tintColor={tintColor}\n      backgroundColor={backgroundColor}\n      rotation={0}\n      lineCap={strokeCap}\n      style={style}\n    >\n      {(fill) =>\n        showsText ? (\n          <Text\n            style={[{ fontSize: size * 0.275, color: tintColor }, textStyle]}\n          >\n            {Math.round(fill)}%\n          </Text>\n        ) : null\n      }\n    </AnimatedCircularProgress>\n  );\n};\n\nexport default withTheme(ProgressCircle);\n"]}