{"version":3,"sources":["ToggleButton.tsx"],"names":["ToggleButton","Icon","icon","toggled","onPress","defaultValue","disabled","color","colorSecondary","borderColor","iconSize","width","height","theme","colors","style","rest","internalValue","setInternalValue","React","useState","useEffect","handlePress","styles","mainContainer","backgroundColor","StyleSheet","create","borderWidth"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;;;;;AAoBA,MAAMA,YAA6B,GAAG,QAgBhC;AAAA,MAhBiC;AACrCC,IAAAA,IADqC;AAErCC,IAAAA,IAFqC;AAGrCC,IAAAA,OAAO,GAAG,KAH2B;AAIrCC,IAAAA,OAAO,GAAG,MAAM,CAAE,CAJmB;AAKrCC,IAAAA,YALqC;AAMrCC,IAAAA,QAAQ,GAAG,KAN0B;AAOrCC,IAAAA,KAAK,GAAG,SAP6B;AAQrCC,IAAAA,cAAc,GAAG,SARoB;AASrCC,IAAAA,WAAW,GAAG,SATuB;AAUrCC,IAAAA,QAAQ,GAAG,EAV0B;AAWrCC,IAAAA,KAAK,GAAG,EAX6B;AAYrCC,IAAAA,MAAM,GAAG,EAZ4B;AAarCC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KAb8B;AAcrCC,IAAAA,KAdqC;AAerC,OAAGC;AAfkC,GAgBjC;AACJ,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCC,KAAK,CAACC,QAAN,CACxCjB,OAAO,IAAIE,YAAX,IAA2B,KADa,CAA1C;AAIAc,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpB,QAAIlB,OAAO,IAAI,IAAf,EAAqB;AACnBe,MAAAA,gBAAgB,CAACf,OAAD,CAAhB;AACD;AACF,GAJD,EAIG,CAACA,OAAD,CAJH;AAMAgB,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpB,QAAIhB,YAAY,IAAI,IAApB,EAA0B;AACxBa,MAAAA,gBAAgB,CAACb,YAAD,CAAhB;AACD;AACF,GAJD,EAIG,CAACA,YAAD,CAJH;;AAMA,QAAMiB,WAAW,GAAG,MAAM;AACxBJ,IAAAA,gBAAgB,CAAC,CAACf,OAAF,CAAhB;AACAC,IAAAA,OAAO,CAAC,CAACD,OAAF,CAAP;AACD,GAHD;;AAKA,sBACE,oBAAC,mBAAD;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,IAAI,EAAEQ,QAHR;AAIE,IAAA,KAAK,EAAEO,aAAa,GAAGH,MAAM,CAACP,KAAD,CAAT,GAAmBO,MAAM,CAACN,cAAD,CAJ/C;AAKE,IAAA,OAAO,EAAEc,WALX;AAME,IAAA,QAAQ,EAAEhB,QANZ;AAOE,IAAA,KAAK,EAAE,CACLiB,MAAM,CAACC,aADF,EAEL;AACEb,MAAAA,KADF;AAEEC,MAAAA,MAFF;AAGEa,MAAAA,eAAe,EAAEtB,OAAO,GAAGW,MAAM,CAACN,cAAD,CAAT,GAA4BM,MAAM,CAACP,KAAD,CAH5D;AAIEE,MAAAA,WAAW,EAAEK,MAAM,CAACL,WAAD;AAJrB,KAFK,EAQLM,KARK;AAPT,KAiBMC,IAjBN,EADF;AAqBD,CA3DD;;AA6DA,MAAMO,MAAM,GAAGG,wBAAWC,MAAX,CAAkB;AAC/BH,EAAAA,aAAa,EAAE;AACbI,IAAAA,WAAW,EAAE;AADA;AADgB,CAAlB,CAAf;;eAMe,wBAAU5B,YAAV,C","sourcesContent":["import * as React from \"react\";\nimport { withTheme } from \"../theming\";\nimport { colorTypes } from \"@draftbit/types\";\nimport { StyleProp, StyleSheet, ViewStyle } from \"react-native\";\nimport IconButton from \"./IconButton\";\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport type { IconSlot } from \"../interfaces/Icon\";\n\ntype Props = {\n  icon: string;\n  toggled?: boolean;\n  onPress?: (value: boolean) => void;\n  defaultValue?: boolean;\n  disabled?: boolean;\n  color?: colorTypes;\n  colorSecondary?: colorTypes;\n  borderColor?: colorTypes;\n  iconSize?: number;\n  width?: number;\n  height?: number;\n  style?: StyleProp<ViewStyle>;\n  theme: Theme;\n} & IconSlot;\n\nconst ToggleButton: React.FC<Props> = ({\n  Icon,\n  icon,\n  toggled = false,\n  onPress = () => {},\n  defaultValue,\n  disabled = false,\n  color = \"primary\",\n  colorSecondary = \"surface\",\n  borderColor = \"divider\",\n  iconSize = 25,\n  width = 50,\n  height = 50,\n  theme: { colors },\n  style,\n  ...rest\n}) => {\n  const [internalValue, setInternalValue] = React.useState<boolean>(\n    toggled || defaultValue || false\n  );\n\n  React.useEffect(() => {\n    if (toggled != null) {\n      setInternalValue(toggled);\n    }\n  }, [toggled]);\n\n  React.useEffect(() => {\n    if (defaultValue != null) {\n      setInternalValue(defaultValue);\n    }\n  }, [defaultValue]);\n\n  const handlePress = () => {\n    setInternalValue(!toggled);\n    onPress(!toggled);\n  };\n\n  return (\n    <IconButton\n      Icon={Icon}\n      icon={icon}\n      size={iconSize}\n      color={internalValue ? colors[color] : colors[colorSecondary]}\n      onPress={handlePress}\n      disabled={disabled}\n      style={[\n        styles.mainContainer,\n        {\n          width,\n          height,\n          backgroundColor: toggled ? colors[colorSecondary] : colors[color],\n          borderColor: colors[borderColor],\n        },\n        style,\n      ]}\n      {...rest}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  mainContainer: {\n    borderWidth: 1,\n  },\n});\n\nexport default withTheme(ToggleButton);\n"]}