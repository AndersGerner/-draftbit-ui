{"version":3,"sources":["AccordionGroup.tsx"],"names":["AccordionGroup","Icon","openColor","closedColor","caretColor","icon","iconSize","style","label","children","expanded","expandedProp","theme","setExpanded","React","useState","handlePressAction","undefined","expandedInternal","expandedColor","colors","primary","collapsedColor","labelColor","styles","row","item","content","color","Children","map","child","isValidElement","props","left","right","cloneElement","StyleSheet","create","flexDirection","alignItems","fontSize","margin","flex","justifyContent","marginLeft"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n  Pressable,\n} from \"react-native\";\nimport Text from \"../Text\";\nimport { withTheme } from \"../../theming\";\nimport type { IconSlot } from \"../../interfaces/Icon\";\nimport type { Theme } from \"../../styles/DefaultTheme\";\n\ntype Props = {\n  openColor: string;\n  closedColor: string;\n  caretColor: string;\n  icon?: string;\n  iconSize: number;\n  style?: StyleProp<TextStyle>;\n  children: React.ReactNode;\n  label: string;\n  expanded?: boolean;\n  theme: Theme;\n} & IconSlot;\n\nconst AccordionGroup = ({\n  Icon,\n  openColor,\n  closedColor,\n  caretColor,\n  icon,\n  iconSize = 24,\n  style,\n  label,\n  children,\n  expanded: expandedProp,\n  theme,\n}: Props) => {\n  const [expanded, setExpanded] = React.useState<boolean>(\n    expandedProp || false\n  );\n\n  const handlePressAction = () => {\n    if (expandedProp === undefined) {\n      setExpanded(!expanded);\n    }\n  };\n\n  const expandedInternal = expandedProp !== undefined ? expandedProp : expanded;\n\n  const expandedColor = openColor || theme.colors.primary;\n  const collapsedColor = closedColor || theme.colors.primary;\n\n  const labelColor = expanded ? expandedColor : collapsedColor;\n\n  return (\n    <>\n      <Pressable\n        style={[style]}\n        onPress={handlePressAction}\n        accessibilityRole=\"button\"\n      >\n        <View style={styles.row}>\n          {icon ? (\n            <Icon\n              name={icon}\n              size={iconSize}\n              color={labelColor}\n              style={styles.icon}\n            />\n          ) : null}\n          <View style={[styles.item, styles.content]}>\n            <Text\n              selectable={false}\n              style={[\n                styles.label,\n                {\n                  color: labelColor,\n                },\n                style,\n              ]}\n            >\n              {label}\n            </Text>\n          </View>\n          <View style={[styles.item]}>\n            <Icon\n              name={\n                expanded\n                  ? \"MaterialIcons/keyboard-arrow-up\"\n                  : \"MaterialIcons/keyboard-arrow-down\"\n              }\n              color={caretColor}\n              size={24}\n            />\n          </View>\n        </View>\n      </Pressable>\n      {expandedInternal\n        ? React.Children.map(children, (child) => {\n            if (\n              React.isValidElement(child) &&\n              !child.props.left &&\n              !child.props.right\n            ) {\n              return React.cloneElement(child, {\n                style: child.props.style,\n              });\n            }\n\n            return child;\n          })\n        : null}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  label: {\n    fontSize: 16,\n  },\n  item: {\n    margin: 8,\n  },\n  content: {\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  icon: {\n    marginLeft: 8,\n  },\n});\n\nexport default withTheme(AccordionGroup);\n"]}