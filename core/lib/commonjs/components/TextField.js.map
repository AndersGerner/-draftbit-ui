{"version":3,"sources":["TextField.tsx"],"names":["AnimatedText","Animated","createAnimatedComponent","Text","FOCUS_ANIMATION_DURATION","BLUR_ANIMATION_DURATION","ICON_SIZE","TextField","React","Component","labeled","Value","props","value","error","focused","placeholder","labelLayout","measured","width","setTimeout","clearTimeout","_timer","setState","timing","state","toValue","duration","useNativeDriver","start","disabled","onChangeText","nativeEvent","text","undefined","getDerivedStateFromProps","nextProps","prevState","componentDidMount","defaultValue","_handleChangeText","_minmizeLabel","componentDidUpdate","prevProps","_restoreLabel","label","_showPlaceholder","_hidePlaceholder","componentWillUnmount","toggleFocus","setNativeProps","args","_root","isFocused","clear","focus","blur","render","Icon","type","leftIconName","leftIconMode","rightIconName","assistiveText","underlineColor","underlineColorProp","multiline","numberOfLines","style","theme","colors","typography","roundness","disabledOpacity","rest","MINIMIZED_LABEL_Y_OFFSET","caption","lineHeight","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","MAXIMIZED_LABEL_FONT_SIZE","subtitle1","fontSize","MINIMIZED_LABEL_FONT_SIZE","hasActiveOutline","inputTextColor","activeColor","borderColor","placeholderColor","containerStyle","backgroundColor","inputStyle","strong","light","divider","primary","background","placeholderTextColor","paddingVertical","color","paddingLeft","paddingRight","height","assistiveTextLeftMargin","borderTopLeftRadius","borderTopRightRadius","paddingBottom","marginTop","borderRadius","borderWidth","paddingTop","opacity","paddingHorizontal","marginLeft","leftIconColor","leftIconProps","size","name","leftIconStyle","position","labelStyle","top","left","transform","translateY","interpolate","inputRange","outputRange","scale","translateX","textStyles","inputStyles","styles","input","marginHorizontal","bgColor","padding","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderCol","styleProp","StyleSheet","flatten","container","underline","scaleY","absoluteFill","e","layout","ref","c","onChange","editable","selectionColor","onFocus","_handleFocus","onBlur","_handleBlur","underlineColorAndroid","right","create","alignSelf","bottom","flexGrow","justifyContent","textAlignVertical","margin","textAlign","I18nManager","isRTL"],"mappings":";;;;;;;AAAA;;AACA;;AAgBA;;AAGA;;;;;;;;;;AAEA,MAAMA,YAAY,GAAGC,sBAASC,uBAAT,CAAiCC,iBAAjC,CAArB;;AAEA,MAAMC,wBAAwB,GAAG,GAAjC;AACA,MAAMC,uBAAuB,GAAG,GAAhC;AACA,MAAMC,SAAS,GAAG,EAAlB;;AAqCA,MAAMC,SAAN,SAAwBC,KAAK,CAACC,SAA9B,CAAsD;AAAA;AAAA;;AAAA,mCAUrC;AACbC,MAAAA,OAAO,EAAE,IAAIT,sBAASU,KAAb,CAAmB,KAAKC,KAAL,CAAWC,KAAX,IAAoB,KAAKD,KAAL,CAAWE,KAA/B,GAAuC,CAAvC,GAA2C,CAA9D,CADI;AAEbC,MAAAA,OAAO,EAAE,KAFI;AAGbC,MAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWE,KAAX,GAAmB,KAAKF,KAAL,CAAWI,WAA9B,GAA4C,EAH5C;AAIbC,MAAAA,WAAW,EAAE;AACXC,QAAAA,QAAQ,EAAE,KADC;AAEXC,QAAAA,KAAK,EAAE;AAFI;AAJA,KAVqC;;AAAA,oCAgE3CC,UAAU,CAAC,MAAM,CAAE,CAAT,EAAW,CAAX,CAhEiC;;AAAA,8CAsEjC,MAAM;AACvBC,MAAAA,YAAY,CAAC,KAAKC,MAAN,CAAZ,CADuB,CAGvB;AACA;;AACA,WAAKA,MAAL,GAAcF,UAAU,CACtB,MACE,KAAKG,QAAL,CAAc;AACZP,QAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWI;AADZ,OAAd,CAFoB,EAKtB,EALsB,CAAxB;AAOD,KAlFmD;;AAAA,8CAoFjC,MACjB,KAAKO,QAAL,CAAc;AACZP,MAAAA,WAAW,EAAE;AADD,KAAd,CArFkD;;AAAA,2CAyFpC,MACdf,sBAASuB,MAAT,CAAgB,KAAKC,KAAL,CAAWf,OAA3B,EAAoC;AAClCgB,MAAAA,OAAO,EAAE,CADyB;AAElCC,MAAAA,QAAQ,EAAEvB,wBAFwB;AAGlCwB,MAAAA,eAAe,EAAE;AAHiB,KAApC,EAIGC,KAJH,EA1FkD;;AAAA,2CAgGpC,MACd5B,sBAASuB,MAAT,CAAgB,KAAKC,KAAL,CAAWf,OAA3B,EAAoC;AAClCgB,MAAAA,OAAO,EAAE,CADyB;AAElCC,MAAAA,QAAQ,EAAEtB,uBAFwB;AAGlCuB,MAAAA,eAAe,EAAE;AAHiB,KAApC,EAIGC,KAJH,EAjGkD;;AAAA,0CAuGrC,MAAM;AACnB,UAAI,KAAKjB,KAAL,CAAWkB,QAAf,EAAyB;AACvB;AACD;;AAED,WAAKP,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KA7GmD;;AAAA,yCA+GtC,MAAM;AAClB,UAAI,KAAKH,KAAL,CAAWkB,QAAf,EAAyB;AACvB;AACD;;AAED,WAAKP,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KArHmD;;AAAA,+CAwHlDF,KADkB,IAEf;AACH,UAAI,KAAKD,KAAL,CAAWkB,QAAf,EAAyB;AACvB;AACD;;AAED,UAAI,OAAOjB,KAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAKU,QAAL,CAAc;AAAEV,UAAAA;AAAF,SAAd;AACA,aAAKD,KAAL,CAAWmB,YAAX,IAA2B,KAAKnB,KAAL,CAAWmB,YAAX,CAAwBlB,KAAxB,CAA3B;AACD,OAHD,MAGO;AACL,aAAKU,QAAL,CAAc;AAAEV,UAAAA,KAAK,EAAEA,KAAK,CAACmB,WAAN,CAAkBC;AAA3B,SAAd;AACA,aAAKrB,KAAL,CAAWmB,YAAX,IACE,KAAKnB,KAAL,CAAWmB,YAAX,CAAwBlB,KAAK,CAACmB,WAAN,CAAkBC,IAA1C,CADF;AAED;AACF,KAtImD;;AAAA,mCA4IfC,SA5Ie;AAAA;;AACrB,SAAxBC,wBAAwB,CAACC,SAAD,EAAmBC,SAAnB,EAAqC;AAClE,WAAO;AACLxB,MAAAA,KAAK,EACH,OAAOuB,SAAS,CAACvB,KAAjB,KAA2B,WAA3B,GACIuB,SAAS,CAACvB,KADd,GAEIwB,SAAS,CAACxB;AAJX,KAAP;AAMD;;AAYDyB,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAK1B,KAAL,CAAW2B,YAAf,EAA6B;AAC3B,WAAKC,iBAAL,CAAuB,KAAK5B,KAAL,CAAW2B,YAAlC;AACD;;AAED,QAAI,KAAK3B,KAAL,CAAWI,WAAf,EAA4B;AAC1B,WAAKyB,aAAL;AACD;AACF;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAmBN,SAAnB,EAAqC;AACrD,QACEA,SAAS,CAACtB,OAAV,KAAsB,KAAKU,KAAL,CAAWV,OAAjC,IACAsB,SAAS,CAACxB,KAAV,KAAoB,KAAKY,KAAL,CAAWZ,KAFjC,EAGE;AACA;AACA;AACA,UACE,KAAKY,KAAL,CAAWZ,KAAX,IACA,KAAKY,KAAL,CAAWV,OADX,IAEA,KAAKH,KAAL,CAAWE,KAFX,IAGA,KAAKF,KAAL,CAAWI,WAJb,EAKE;AACA,aAAKyB,aAAL;AACD,OAPD,MAOO;AACL,aAAKG,aAAL;AACD;AACF;;AAED,QACEP,SAAS,CAACtB,OAAV,KAAsB,KAAKU,KAAL,CAAWV,OAAjC,IACA4B,SAAS,CAACE,KAAV,KAAoB,KAAKjC,KAAL,CAAWiC,KAFjC,EAGE;AACA;AACA;AACA;AACA,UAAI,KAAKpB,KAAL,CAAWV,OAAX,IAAsB,KAAKH,KAAL,CAAWE,KAAjC,IAA0C,CAAC,KAAKF,KAAL,CAAWiC,KAA1D,EAAiE;AAC/D,aAAKC,gBAAL;AACD,OAFD,MAEO;AACL,aAAKC,gBAAL;AACD;AACF;AACF;;AAIDC,EAAAA,oBAAoB,GAAG;AACrB3B,IAAAA,YAAY,CAAC,KAAKC,MAAN,CAAZ;AACD;;AAoED2B,EAAAA,WAAW,GAAG;AACZ,SAAK1B,QAAL,CAAec,SAAD,KAAuB;AAAEtB,MAAAA,OAAO,EAAE,CAACsB,SAAS,CAACtB;AAAtB,KAAvB,CAAd;AACD;;AAGD;AACF;AACA;AACEmC,EAAAA,cAAc,CAACC,IAAD,EAAc;AAC1B,WAAO,KAAKC,KAAL,IAAc,KAAKA,KAAL,CAAWF,cAAX,CAA0BC,IAA1B,CAArB;AACD;;AAEDE,EAAAA,SAAS,GAAG;AACV,WAAO,KAAKD,KAAL,IAAc,KAAKA,KAAL,CAAWC,SAAX,EAArB;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,WAAO,KAAKF,KAAL,IAAc,KAAKA,KAAL,CAAWE,KAAX,EAArB;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,WAAO,KAAKH,KAAL,IAAc,KAAKA,KAAL,CAAWG,KAAX,EAArB;AACD;;AAEDC,EAAAA,IAAI,GAAG;AACL,WAAO,KAAKJ,KAAL,IAAc,KAAKA,KAAL,CAAWI,IAAX,EAArB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,IADI;AAEJC,MAAAA,IAAI,GAAG,WAFH;AAGJ7B,MAAAA,QAAQ,GAAG,KAHP;AAIJe,MAAAA,KAJI;AAKJ/B,MAAAA,KAAK,GAAG,KALJ;AAMJ8C,MAAAA,YANI;AAOJC,MAAAA,YAPI;AAQJC,MAAAA,aARI;AASJC,MAAAA,aATI;AAUJC,MAAAA,cAAc,EAAEC,kBAVZ;AAWJC,MAAAA,SAAS,GAAG,KAXR;AAYJC,MAAAA,aAAa,GAAG,CAZZ;AAaJC,MAAAA,KAbI;AAcJC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,UAAV;AAAsBC,QAAAA,SAAtB;AAAiCC,QAAAA;AAAjC,OAdH;AAeJhB,MAAAA,MAAM,GAAI7C,KAAD,iBAAW,oBAAC,sBAAD,EAAqBA,KAArB,CAfhB;AAgBJ,SAAG8D;AAhBC,QAiBF,KAAK9D,KAjBT;AAmBA,UAAM+D,wBAAwB,GAAG,EAAEJ,UAAU,CAACK,OAAX,CAAmBC,UAAnB,GAAgC,CAAlC,CAAjC;AACA,UAAMC,gCAAgC,GAAG,EAAE,KAAK,GAAL,GAAW,CAAb,CAAzC;AACA,UAAMC,yBAAyB,GAAGR,UAAU,CAACS,SAAX,CAAqBC,QAAvD;AACA,UAAMC,yBAAyB,GAAGX,UAAU,CAACK,OAAX,CAAmBK,QAArD;AAEA,UAAME,gBAAgB,GAAG,KAAK1D,KAAL,CAAWV,OAAX,IAAsBD,KAA/C;AAEA,QAAIsE,cAAJ,EACEC,WADF,EAEErB,cAFF,EAGEsB,WAHF,EAIEC,gBAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,UAPF;AASAN,IAAAA,cAAc,GAAGd,MAAM,CAACqB,MAAxB;;AACA,QAAI7D,QAAJ,EAAc;AACZuD,MAAAA,WAAW,GAAGf,MAAM,CAACsB,KAArB;AACAL,MAAAA,gBAAgB,GAAGjB,MAAM,CAACsB,KAA1B;AACAN,MAAAA,WAAW,GAAG,aAAd;AACAtB,MAAAA,cAAc,GAAG,aAAjB;AACAyB,MAAAA,eAAe,GAAGnB,MAAM,CAACuB,OAAzB;AACD,KAND,MAMO;AACLR,MAAAA,WAAW,GAAGvE,KAAK,GAAGwD,MAAM,CAACxD,KAAV,GAAkBwD,MAAM,CAACwB,OAA5C;AACAP,MAAAA,gBAAgB,GAAGD,WAAW,GAAGhB,MAAM,CAACsB,KAAxC;AACA5B,MAAAA,cAAc,GAAGC,kBAAjB;AACAwB,MAAAA,eAAe,GAAGnB,MAAM,CAACyB,UAAzB;AACD;;AAED,QAAIrB,IAAI,CAACsB,oBAAT,EAA+B;AAC7BT,MAAAA,gBAAgB,GAAGb,IAAI,CAACsB,oBAAxB;AACD;;AAED,UAAM;AAAEnB,MAAAA,UAAF;AAAc,SAAGG;AAAjB,QAA+BT,UAAU,CAACS,SAAhD;AAEAU,IAAAA,UAAU,GAAG;AACXO,MAAAA,eAAe,EAAE,CADN;AAEXC,MAAAA,KAAK,EAAEd,cAFI;AAGXe,MAAAA,WAAW,EACTvC,YAAY,IAAIC,YAAY,KAAK,OAAjC,GACIvD,SAAS,GAAG,EAAZ,IAAkBqD,IAAI,KAAK,OAAT,GAAmB,EAAnB,GAAwB,CAA1C,CADJ,GAEI,CANK;AAOXyC,MAAAA,YAAY,EAAEtC,aAAa,GAAGxD,SAAS,GAAG,EAAZ,GAAiB,CAApB,GAAwB,EAPxC;AAQX,SAAG0E;AARQ,KAAb;;AAWA,QAAI,CAACd,SAAL,EAAgB;AACdwB,MAAAA,UAAU,CAACW,MAAX,GAAoBxB,UAApB;AACD;;AAED,QAAIyB,uBAAJ;;AACA,QAAI3C,IAAI,KAAK,WAAb,EAA0B;AACxB6B,MAAAA,cAAc,GAAG;AACfe,QAAAA,mBAAmB,EAAE/B,SADN;AAEfgC,QAAAA,oBAAoB,EAAEhC,SAFP;AAGfiC,QAAAA,aAAa,EAAE,EAHA;AAIfC,QAAAA,SAAS,EAAE;AAJI,OAAjB;;AAOA,UAAI9C,YAAY,IAAIC,YAAY,KAAK,QAArC,EAA+C;AAC7CyC,QAAAA,uBAAuB,GAAGhG,SAAS,GAAG,CAAtC;AACD,OAFD,MAEO;AACLgG,QAAAA,uBAAuB,GAAG,CAA1B;AACD;AACF,KAbD,MAaO;AACLd,MAAAA,cAAc,GAAG;AACfmB,QAAAA,YAAY,EAAEnC,SADC;AAEfc,QAAAA,WAAW,EAAEH,gBAAgB,GAAGE,WAAH,GAAiBC,WAF/B;AAGfsB,QAAAA,WAAW,EAAE,CAHE;AAIfC,QAAAA,UAAU,EAAEhE,KAAK,GAAG,KAAK,GAAR,GAAc,EAJhB;AAKf4D,QAAAA,aAAa,EAAE5D,KAAK,GAAG,KAAK,GAAR,GAAc,EALnB;AAMfiE,QAAAA,OAAO,EAAEhF,QAAQ,GAAG2C,eAAH,GAAqB,CANvB;AAOfgB,QAAAA;AAPe,OAAjB;;AAUA,UAAI7B,YAAY,IAAIC,YAAY,KAAK,OAArC,EAA8C;AAC5CyC,QAAAA,uBAAuB,GAAG,KAAK,CAA/B;AACD,OAFD,MAEO,IAAI1C,YAAY,IAAIC,YAAY,KAAK,QAArC,EAA+C;AACpDyC,QAAAA,uBAAuB,GAAGhG,SAAS,GAAG,CAAZ,GAAgB,EAA1C;AACD,OAFM,MAEA;AACLgG,QAAAA,uBAAuB,GAAG,EAA1B;AACD;;AAEDZ,MAAAA,UAAU,CAACqB,iBAAX,GAA+B,EAA/B;AACD;;AAED,QAAInD,YAAY,IAAIC,YAAY,KAAK,QAArC,EAA+C;AAC7C2B,MAAAA,cAAc,CAACwB,UAAf,GAA4B1G,SAAS,GAAG,CAAxC;AACD;;AAED,QAAI2G,aAAJ;;AACA,QAAInG,KAAJ,EAAW;AACTmG,MAAAA,aAAa,GAAG3C,MAAM,CAACxD,KAAvB;AACD,KAFD,MAEO,IAAI,KAAKW,KAAL,CAAWV,OAAf,EAAwB;AAC7BkG,MAAAA,aAAa,GAAG3C,MAAM,CAACwB,OAAvB;AACD,KAFM,MAEA;AACLmB,MAAAA,aAAa,GAAG3C,MAAM,CAACsB,KAAvB;AACD;;AAED,UAAMsB,aAAa,GAAG;AACpBC,MAAAA,IAAI,EAAE,EADc;AAEpBjB,MAAAA,KAAK,EAAEe,aAFa;AAGpBG,MAAAA,IAAI,EAAExD,YAAY,IAAI;AAHF,KAAtB;AAMA,UAAMyD,aAAyB,GAAG;AAChCC,MAAAA,QAAQ,EAAE,UADsB;AAEhCZ,MAAAA,SAAS,EACP/C,IAAI,KAAK,OAAT,GACIuB,yBAAyB,GAAG,CADhC,GAEIrB,YAAY,KAAK,QAAjB,GACA,EADA,GAEA;AAP0B,KAAlC;AAUA,UAAM0D,UAAU,GAAG,EACjB,GAAGhD,UAAU,CAACS,SADG;AAEjBwC,MAAAA,GAAG,EAAE7D,IAAI,KAAK,OAAT,GAAmB,EAAnB,GAAwB,CAFZ;AAGjB8D,MAAAA,IAAI,EACF7D,YAAY,IAAIC,YAAY,KAAK,OAAjC,GACIvD,SAAS,IAAIqD,IAAI,KAAK,OAAT,GAAmB,EAAnB,GAAwB,EAA5B,CADb,GAEI,CANW;AAOjB+D,MAAAA,SAAS,EAAE,CACT;AACE;AACAC,QAAAA,UAAU,EAAE,KAAKlG,KAAL,CAAWf,OAAX,CAAmBkH,WAAnB,CAA+B;AACzCC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD6B;AAEzCC,UAAAA,WAAW,EAAE,CACXnE,IAAI,KAAK,OAAT,GACImB,gCADJ,GAEIH,wBAHO,EAIX,CAJW;AAF4B,SAA/B;AAFd,OADS,EAaT;AACE;AACAoD,QAAAA,KAAK,EAAE,KAAKtG,KAAL,CAAWf,OAAX,CAAmBkH,WAAnB,CAA+B;AACpCC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADwB;AAEpCC,UAAAA,WAAW,EAAE,CACX5C,yBAAyB,GAAGH,yBADjB,EAEX,CAFW;AAFuB,SAA/B;AAFT,OAbS,EAuBT;AACE;AACAiD,QAAAA,UAAU,EAAE,KAAKvG,KAAL,CAAWf,OAAX,CAAmBkH,WAAnB,CAA+B;AACzCC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD6B;AAEzCC,UAAAA,WAAW,EAAE,CACX,EAAE,IAAI5C,yBAAyB,GAAGH,yBAAlC,KACG,KAAKtD,KAAL,CAAWR,WAAX,CAAuBE,KAAvB,GAA+B,CADlC,CADW,EAGX,CAHW;AAF4B,SAA/B;AAFd,OAvBS;AAPM,KAAnB;AA4CA,UAAM;AAAE8G,MAAAA;AAAF,QAAiB,8BAAc7D,KAAd,CAAvB;AACA,UAAM8D,WAAW,GAAG,4BAClB,CACEC,MAAM,CAACC,KADT,EAEE1C,UAFF,EAGE/B,IAAI,KAAK,OAAT,GAAmB;AAAE0E,MAAAA,gBAAgB,EAAE;AAApB,KAAnB,GAA8C,EAHhD,CADkB,EAMlBJ,UANkB,CAApB;;AASA,UAAM;AACJxC,MAAAA,eAAe,EAAE6C,OADb;AAEJC,MAAAA,OAFI;AAGJ1B,MAAAA,UAHI;AAIJJ,MAAAA,aAJI;AAKJN,MAAAA,WALI;AAMJC,MAAAA,YANI;AAOJO,MAAAA,YAPI;AAQJC,MAAAA,WARI;AASJ4B,MAAAA,cATI;AAUJC,MAAAA,gBAVI;AAWJC,MAAAA,iBAXI;AAYJC,MAAAA,eAZI;AAaJrD,MAAAA,WAAW,EAAEsD,SAbT;AAcJ,SAAGC;AAdC,QAeFC,wBAAWC,OAAX,CAAmB3E,KAAK,IAAI,EAA5B,CAfJ;;AAiBA,wBACE,oBAAC,iBAAD;AAAM,MAAA,KAAK,EAAE,CAAC+D,MAAM,CAACa,SAAR,EAAmBH,SAAnB;AAAb,OACGjF,YAAY,IAAIC,YAAY,KAAK,QAAjC,gBACC,oBAAC,IAAD,eAAUqD,aAAV;AAAyB,MAAA,KAAK,EAAEG;AAAhC,OADD,GAEG,IAHN,eAIE,oBAAC,iBAAD;AACE,MAAA,KAAK,EAAE,4BAAY,CAAC7B,cAAD,CAAZ,EAA8B;AACnCa,QAAAA,MAAM,EAAEjC,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEiC,MADoB;AAEnCZ,QAAAA,eAAe,EAAE6C,OAFkB;AAGnCC,QAAAA,OAHmC;AAInC1B,QAAAA,UAJmC;AAKnCJ,QAAAA,aALmC;AAMnCN,QAAAA,WANmC;AAOnCC,QAAAA,YAPmC;AAQnCO,QAAAA,YARmC;AASnCC,QAAAA,WATmC;AAUnC4B,QAAAA,cAVmC;AAWnCC,QAAAA,gBAXmC;AAYnCC,QAAAA,iBAZmC;AAanCC,QAAAA,eAbmC;AAcnCrD,QAAAA,WAAW,EAAEsD;AAdsB,OAA9B;AADT,OAkBGjF,IAAI,KAAK,WAAT;AAAA;AACC;AACA,wBAAC,qBAAD,CAAU,IAAV;AACE,MAAA,KAAK,EAAE,CACLwE,MAAM,CAACc,SADF,EAEL;AACExD,QAAAA,eAAe,EACb6C,OAAO,KACNxH,KAAK,GACFwD,MAAM,CAACxD,KADL,GAEF,KAAKW,KAAL,CAAWV,OAAX,GACAsE,WADA,GAEArB,cALG,CAFX;AAQE;AACA0D,QAAAA,SAAS,EAAE,CAAC;AAAEwB,UAAAA,MAAM,EAAE,KAAKzH,KAAL,CAAWV,OAAX,GAAqB,CAArB,GAAyB;AAAnC,SAAD;AATb,OAFK;AADT,MAFD,GAkBG,IApCN,EAsCG8B,KAAK;AAAA;AACJ;AACA;AACA,wBAAC,iBAAD;AACE,MAAA,aAAa,EAAC,MADhB;AAEE,MAAA,KAAK,EAAE,CACLiG,wBAAWK,YADN,EAEL;AACErC,QAAAA,OAAO,EACL;AACA,aAAKrF,KAAL,CAAWZ,KAAX,IAAoB,KAAKY,KAAL,CAAWV,OAA/B,GACI,KAAKU,KAAL,CAAWR,WAAX,CAAuBC,QAAvB,GACE,CADF,GAEE,CAHN,GAII;AAPR,OAFK;AAFT,oBAeE,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAGkI,CAAD,IACR,KAAK7H,QAAL,CAAc;AACZN,QAAAA,WAAW,EAAE;AACXE,UAAAA,KAAK,EAAEiI,CAAC,CAACpH,WAAF,CAAcqH,MAAd,CAAqBlI,KADjB;AAEXD,UAAAA,QAAQ,EAAE;AAFC;AADD,OAAd,CAFJ;AASE,MAAA,KAAK,EAAE,CACLiH,MAAM,CAACnH,WADF,EAEL2C,IAAI,KAAK,OAAT,GAAmB;AAAEoD,QAAAA,iBAAiB,EAAE;AAArB,OAAnB,GAA+C,EAF1C,EAGLQ,UAHK,EAIL;AACErB,QAAAA,KAAK,EAAEX,gBADT;AAEEuB,QAAAA,OAAO,EAAE,KAAKrF,KAAL,CAAWf,OAAX,CAAmBkH,WAAnB,CAA+B;AACtCC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD0B;AAEtCC,UAAAA,WAAW,EAAE,CAAC3C,gBAAgB,GAAG,CAAH,GAAO,CAAxB,EAA2B,CAA3B;AAFyB,SAA/B;AAFX,OAJK,CATT;AAqBE,MAAA,aAAa,EAAE;AArBjB,OAuBGtC,KAvBH,CAfF,eAwCE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAE,CACLsF,MAAM,CAACnH,WADF,EAEL2C,IAAI,KAAK,OAAT,GAAmB;AAAEoD,QAAAA,iBAAiB,EAAE;AAArB,OAAnB,GAA+C,EAF1C,EAGLQ,UAHK,EAIL;AACErB,QAAAA,KAAK,EAAEX,gBADT;AAEEuB,QAAAA,OAAO,EAAE3B,gBAAgB,GAAG,KAAK1D,KAAL,CAAWf,OAAd,GAAwB;AAFnD,OAJK,CADT;AAUE,MAAA,aAAa,EAAE;AAVjB,OAYGmC,KAZH,CAxCF,CAHI,GA0DF,IAhGN,EAkGGe,YAAY,IAAIC,YAAY,KAAK,OAAjC,gBACC,oBAAC,IAAD,eACMqD,aADN;AAEE,MAAA,KAAK,EAAE,EACL,GAAGG,aADE;AAELL,QAAAA,UAAU,EAAErD,IAAI,KAAK,OAAT,GAAmB,EAAnB,GAAwB;AAF/B;AAFT,OADD,GAQG,IA1GN,EA4GGF,MAAM,CAAC;AACN6F,MAAAA,GAAG,EAAGC,CAAD,IAAwB;AAC3B,aAAKnG,KAAL,GAAamG,CAAb;AACD,OAHK;AAINC,MAAAA,QAAQ,EAAE,KAAKhH,iBAJT;AAKNxB,MAAAA,WAAW,EAAE6B,KAAK,GACd,KAAKpB,KAAL,CAAWT,WADG,GAEd,KAAKJ,KAAL,CAAWI,WAPT;AAQNgF,MAAAA,oBAAoB,EAAET,gBARhB;AASNkE,MAAAA,QAAQ,EAAE,CAAC3H,QATL;AAUN4H,MAAAA,cAAc,EAAErE,WAVV;AAWNnB,MAAAA,SAXM;AAYNC,MAAAA,aAZM;AAaNwF,MAAAA,OAAO,EAAE,KAAKC,YAbR;AAcNC,MAAAA,MAAM,EAAE,KAAKC,WAdP;AAeNC,MAAAA,qBAAqB,EAAE,aAfjB;AAgBN3F,MAAAA,KAAK,EAAE8D,WAhBD;AAiBN,SAAGxD,IAjBG;AAkBN7D,MAAAA,KAAK,EAAE,KAAKY,KAAL,CAAWZ;AAlBZ,KAAD,CA5GT,CAJF,EAqIGiD,aAAa,gBACZ,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEA,aADR;AAEE,MAAA,IAAI,EAAExD,SAFR;AAGE,MAAA,KAAK,EAAEgE,MAAM,CAACsB,KAHhB;AAIE,MAAA,KAAK,EAAE;AACL0B,QAAAA,QAAQ,EAAE,UADL;AAEL0C,QAAAA,KAAK,EAAE,EAFF;AAGLtD,QAAAA,SAAS,EAAE/C,IAAI,KAAK,OAAT,GAAmBuB,yBAAyB,GAAG,CAA/C,GAAmD;AAHzD;AAJT,MADY,GAWV,IAhJN,EAkJGnB,aAAa,gBACZ,oBAAC,iBAAD;AACE,MAAA,KAAK,EAAE,CACL;AACEmC,QAAAA,KAAK,EAAEpF,KAAK,GAAGwD,MAAM,CAACxD,KAAV,GAAkBwD,MAAM,CAACsB,KADvC;AAEEc,QAAAA,SAAS,EAAE,CAFb;AAGEM,QAAAA,UAAU,EAAEV;AAHd,OADK;AADT,OASGvC,aATH,CADY,GAYV,IA9JN,CADF;AAkKD;;AArhBmD;;eAwhBvC,wBAAUxD,SAAV,C;;;;AAEf,MAAM4H,MAAM,GAAGW,wBAAWmB,MAAX,CAAkB;AAC/BjB,EAAAA,SAAS,EAAE;AACTkB,IAAAA,SAAS,EAAE;AADF,GADoB;AAI/BlJ,EAAAA,WAAW,EAAE;AACXsG,IAAAA,QAAQ,EAAE,UADC;AAEXG,IAAAA,IAAI,EAAE;AAFK,GAJkB;AAQ/BwB,EAAAA,SAAS,EAAE;AACT3B,IAAAA,QAAQ,EAAE,UADD;AAETG,IAAAA,IAAI,EAAE,CAFG;AAGTuC,IAAAA,KAAK,EAAE,CAHE;AAITG,IAAAA,MAAM,EAAE,CAJC;AAKT9D,IAAAA,MAAM,EAAE;AALC,GARoB;AAe/B+B,EAAAA,KAAK,EAAE;AACLgC,IAAAA,QAAQ,EAAE,CADL;AAELC,IAAAA,cAAc,EAAE,QAFX;AAGLC,IAAAA,iBAAiB,EAAE,QAHd;AAILC,IAAAA,MAAM,EAAE,CAJH;AAKLC,IAAAA,SAAS,EAAEC,yBAAYC,KAAZ,GAAoB,OAApB,GAA8B;AALpC;AAfwB,CAAlB,CAAf","sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  Animated,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  Text,\n  I18nManager,\n  StyleProp,\n  TextInputProps,\n  NativeSyntheticEvent,\n  TextInputChangeEventData,\n  ViewStyle,\n  TextStyle,\n  LayoutChangeEvent,\n  ImageStyle,\n} from \"react-native\";\nimport { withTheme } from \"../theming\";\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport type { IconSlot } from \"../interfaces/Icon\";\nimport { applyStyles, extractStyles } from \"../utilities\";\n\nconst AnimatedText = Animated.createAnimatedComponent(Text);\n\nconst FOCUS_ANIMATION_DURATION = 150;\nconst BLUR_ANIMATION_DURATION = 180;\nconst ICON_SIZE = 24;\n\nexport type Props = {\n  type?: \"solid\" | \"underline\";\n  defaultValue?: string;\n  disabled?: boolean;\n  label?: string;\n  error?: boolean;\n  leftIconName?: string;\n  leftIconMode?: \"inset\" | \"outset\";\n  onChangeText: (\n    text: string | NativeSyntheticEvent<TextInputChangeEventData>\n  ) => void;\n  rightIconName?: string;\n  assistiveText?: string;\n  multiline?: boolean;\n  numberOfLines: number;\n  underlineColor?: string;\n  style?: StyleProp<ViewStyle> & { height?: number };\n  theme: Theme;\n  render?: (\n    props: TextInputProps & { ref: (c: NativeTextInput) => void }\n  ) => React.ReactNode;\n} & TextInputProps &\n  IconSlot;\n\ninterface State {\n  labeled: Animated.Value;\n  focused?: boolean;\n  placeholder?: string | undefined;\n  labelLayout: {\n    measured: boolean;\n    width: number;\n  };\n  value?: string;\n}\n\nclass TextField extends React.Component<Props, State> {\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    return {\n      value:\n        typeof nextProps.value !== \"undefined\"\n          ? nextProps.value\n          : prevState.value,\n    };\n  }\n\n  state: State = {\n    labeled: new Animated.Value(this.props.value || this.props.error ? 0 : 1),\n    focused: false,\n    placeholder: this.props.error ? this.props.placeholder : \"\",\n    labelLayout: {\n      measured: false,\n      width: 0,\n    },\n  };\n\n  componentDidMount() {\n    if (this.props.defaultValue) {\n      this._handleChangeText(this.props.defaultValue);\n    }\n\n    if (this.props.placeholder) {\n      this._minmizeLabel();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (\n      prevState.focused !== this.state.focused ||\n      prevState.value !== this.state.value\n    ) {\n      // The label should be minimized if the text input is focused, or has text\n      // In minimized mode, the label moves up and becomes small\n      if (\n        this.state.value ||\n        this.state.focused ||\n        this.props.error ||\n        this.props.placeholder\n      ) {\n        this._minmizeLabel();\n      } else {\n        this._restoreLabel();\n      }\n    }\n\n    if (\n      prevState.focused !== this.state.focused ||\n      prevProps.label !== this.props.label\n    ) {\n      // Show placeholder text only if the input is focused, or has error, or there's no label\n      // We don't show placeholder if there's a label because the label acts as placeholder\n      // When focused, the label moves up, so we can show a placeholder\n      if (this.state.focused || this.props.error || !this.props.label) {\n        this._showPlaceholder();\n      } else {\n        this._hidePlaceholder();\n      }\n    }\n  }\n\n  _timer = setTimeout(() => {}, 0);\n\n  componentWillUnmount() {\n    clearTimeout(this._timer);\n  }\n\n  _showPlaceholder = () => {\n    clearTimeout(this._timer);\n\n    // Set the placeholder in a delay to offset the label animation\n    // If we show it immediately, they'll overlap and look ugly\n    this._timer = setTimeout(\n      () =>\n        this.setState({\n          placeholder: this.props.placeholder,\n        }),\n      50\n    );\n  };\n\n  _hidePlaceholder = () =>\n    this.setState({\n      placeholder: \"\",\n    });\n\n  _restoreLabel = () =>\n    Animated.timing(this.state.labeled, {\n      toValue: 1,\n      duration: FOCUS_ANIMATION_DURATION,\n      useNativeDriver: true,\n    }).start();\n\n  _minmizeLabel = () =>\n    Animated.timing(this.state.labeled, {\n      toValue: 0,\n      duration: BLUR_ANIMATION_DURATION,\n      useNativeDriver: true,\n    }).start();\n\n  _handleFocus = () => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.setState({ focused: true });\n  };\n\n  _handleBlur = () => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.setState({ focused: false });\n  };\n\n  _handleChangeText = (\n    value: NativeSyntheticEvent<TextInputChangeEventData> | string\n  ) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    if (typeof value === \"string\") {\n      this.setState({ value });\n      this.props.onChangeText && this.props.onChangeText(value);\n    } else {\n      this.setState({ value: value.nativeEvent.text });\n      this.props.onChangeText &&\n        this.props.onChangeText(value.nativeEvent.text);\n    }\n  };\n\n  toggleFocus() {\n    this.setState((prevState: State) => ({ focused: !prevState.focused }));\n  }\n\n  _root: NativeTextInput | undefined = undefined;\n  /**\n   * @internal\n   */\n  setNativeProps(args: Props) {\n    return this._root && this._root.setNativeProps(args);\n  }\n\n  isFocused() {\n    return this._root && this._root.isFocused();\n  }\n\n  clear() {\n    return this._root && this._root.clear();\n  }\n\n  focus() {\n    return this._root && this._root.focus();\n  }\n\n  blur() {\n    return this._root && this._root.blur();\n  }\n\n  render() {\n    const {\n      Icon,\n      type = \"underline\",\n      disabled = false,\n      label,\n      error = false,\n      leftIconName,\n      leftIconMode,\n      rightIconName,\n      assistiveText,\n      underlineColor: underlineColorProp,\n      multiline = false,\n      numberOfLines = 4,\n      style,\n      theme: { colors, typography, roundness, disabledOpacity },\n      render = (props) => <NativeTextInput {...props} />,\n      ...rest\n    } = this.props;\n\n    const MINIMIZED_LABEL_Y_OFFSET = -(typography.caption.lineHeight + 4);\n    const OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -(16 * 0.5 + 4);\n    const MAXIMIZED_LABEL_FONT_SIZE = typography.subtitle1.fontSize;\n    const MINIMIZED_LABEL_FONT_SIZE = typography.caption.fontSize;\n\n    const hasActiveOutline = this.state.focused || error;\n\n    let inputTextColor,\n      activeColor,\n      underlineColor,\n      borderColor,\n      placeholderColor,\n      containerStyle: StyleProp<ViewStyle>,\n      backgroundColor,\n      inputStyle: StyleProp<TextStyle>;\n\n    inputTextColor = colors.strong;\n    if (disabled) {\n      activeColor = colors.light;\n      placeholderColor = colors.light;\n      borderColor = \"transparent\";\n      underlineColor = \"transparent\";\n      backgroundColor = colors.divider;\n    } else {\n      activeColor = error ? colors.error : colors.primary;\n      placeholderColor = borderColor = colors.light;\n      underlineColor = underlineColorProp;\n      backgroundColor = colors.background;\n    }\n\n    if (rest.placeholderTextColor) {\n      placeholderColor = rest.placeholderTextColor;\n    }\n\n    const { lineHeight, ...subtitle1 } = typography.subtitle1;\n\n    inputStyle = {\n      paddingVertical: 0,\n      color: inputTextColor,\n      paddingLeft:\n        leftIconName && leftIconMode === \"inset\"\n          ? ICON_SIZE + 12 + (type === \"solid\" ? 16 : 0)\n          : 0,\n      paddingRight: rightIconName ? ICON_SIZE + 16 + 4 : 12,\n      ...subtitle1,\n    };\n\n    if (!multiline) {\n      inputStyle.height = lineHeight;\n    }\n\n    let assistiveTextLeftMargin;\n    if (type === \"underline\") {\n      containerStyle = {\n        borderTopLeftRadius: roundness,\n        borderTopRightRadius: roundness,\n        paddingBottom: 12,\n        marginTop: 16,\n      };\n\n      if (leftIconName && leftIconMode === \"outset\") {\n        assistiveTextLeftMargin = ICON_SIZE + 8;\n      } else {\n        assistiveTextLeftMargin = 0;\n      }\n    } else {\n      containerStyle = {\n        borderRadius: roundness,\n        borderColor: hasActiveOutline ? activeColor : borderColor,\n        borderWidth: 1,\n        paddingTop: label ? 16 * 1.5 : 16,\n        paddingBottom: label ? 16 * 0.5 : 16,\n        opacity: disabled ? disabledOpacity : 1,\n        backgroundColor,\n      };\n\n      if (leftIconName && leftIconMode === \"inset\") {\n        assistiveTextLeftMargin = 16 + 4;\n      } else if (leftIconName && leftIconMode === \"outset\") {\n        assistiveTextLeftMargin = ICON_SIZE + 8 + 12;\n      } else {\n        assistiveTextLeftMargin = 12;\n      }\n\n      inputStyle.paddingHorizontal = 12;\n    }\n\n    if (leftIconName && leftIconMode === \"outset\") {\n      containerStyle.marginLeft = ICON_SIZE + 8;\n    }\n\n    let leftIconColor;\n    if (error) {\n      leftIconColor = colors.error;\n    } else if (this.state.focused) {\n      leftIconColor = colors.primary;\n    } else {\n      leftIconColor = colors.light;\n    }\n\n    const leftIconProps = {\n      size: 24,\n      color: leftIconColor,\n      name: leftIconName || \"\",\n    };\n\n    const leftIconStyle: ImageStyle = {\n      position: \"absolute\",\n      marginTop:\n        type === \"solid\"\n          ? MINIMIZED_LABEL_FONT_SIZE + 4\n          : leftIconMode === \"outset\"\n          ? 16\n          : 0,\n    };\n\n    const labelStyle = {\n      ...typography.subtitle1,\n      top: type === \"solid\" ? 16 : 0,\n      left:\n        leftIconName && leftIconMode === \"inset\"\n          ? ICON_SIZE + (type === \"solid\" ? 16 : 12)\n          : 0,\n      transform: [\n        {\n          // Move label to top\n          translateY: this.state.labeled.interpolate({\n            inputRange: [0, 1],\n            outputRange: [\n              type === \"solid\"\n                ? OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n                : MINIMIZED_LABEL_Y_OFFSET,\n              0,\n            ],\n          }),\n        },\n        {\n          // Make label smaller\n          scale: this.state.labeled.interpolate({\n            inputRange: [0, 1],\n            outputRange: [\n              MINIMIZED_LABEL_FONT_SIZE / MAXIMIZED_LABEL_FONT_SIZE,\n              1,\n            ],\n          }),\n        },\n        {\n          // Offset label scale since RN doesn't support transform origin\n          translateX: this.state.labeled.interpolate({\n            inputRange: [0, 1],\n            outputRange: [\n              -(1 - MINIMIZED_LABEL_FONT_SIZE / MAXIMIZED_LABEL_FONT_SIZE) *\n                (this.state.labelLayout.width / 2),\n              0,\n            ],\n          }),\n        },\n      ],\n    };\n\n    const { textStyles } = extractStyles(style);\n    const inputStyles = applyStyles(\n      [\n        styles.input,\n        inputStyle,\n        type === \"solid\" ? { marginHorizontal: 12 } : {},\n      ],\n      textStyles\n    );\n\n    const {\n      backgroundColor: bgColor,\n      padding,\n      paddingTop,\n      paddingBottom,\n      paddingLeft,\n      paddingRight,\n      borderRadius,\n      borderWidth,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      borderColor: borderCol,\n      ...styleProp\n    } = StyleSheet.flatten(style || {}) as ViewStyle & { height?: number };\n\n    return (\n      <View style={[styles.container, styleProp]}>\n        {leftIconName && leftIconMode === \"outset\" ? (\n          <Icon {...leftIconProps} style={leftIconStyle} />\n        ) : null}\n        <View\n          style={applyStyles([containerStyle], {\n            height: style?.height,\n            backgroundColor: bgColor,\n            padding,\n            paddingTop,\n            paddingBottom,\n            paddingLeft,\n            paddingRight,\n            borderRadius,\n            borderWidth,\n            borderTopWidth,\n            borderRightWidth,\n            borderBottomWidth,\n            borderLeftWidth,\n            borderColor: borderCol,\n          })}\n        >\n          {type === \"underline\" ? (\n            // When type === 'flat', render an underline\n            <Animated.View\n              style={[\n                styles.underline,\n                {\n                  backgroundColor:\n                    bgColor ||\n                    (error\n                      ? colors.error\n                      : this.state.focused\n                      ? activeColor\n                      : underlineColor),\n                  // Underlines is thinner when input is not focused\n                  transform: [{ scaleY: this.state.focused ? 1 : 0.5 }],\n                },\n              ]}\n            />\n          ) : null}\n\n          {label ? (\n            // Position colored placeholder and gray placeholder on top of each other and crossfade them\n            // This gives the effect of animating the color, but allows us to use native driver\n            <View\n              pointerEvents=\"none\"\n              style={[\n                StyleSheet.absoluteFill,\n                {\n                  opacity:\n                    // Hide the label in minimized state until we measure its width\n                    this.state.value || this.state.focused\n                      ? this.state.labelLayout.measured\n                        ? 1\n                        : 0\n                      : 1,\n                },\n              ]}\n            >\n              <AnimatedText\n                onLayout={(e: LayoutChangeEvent) =>\n                  this.setState({\n                    labelLayout: {\n                      width: e.nativeEvent.layout.width,\n                      measured: true,\n                    },\n                  })\n                }\n                style={[\n                  styles.placeholder,\n                  type === \"solid\" ? { paddingHorizontal: 12 } : {},\n                  labelStyle,\n                  {\n                    color: placeholderColor,\n                    opacity: this.state.labeled.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [hasActiveOutline ? 1 : 0, 0],\n                    }),\n                  },\n                ]}\n                numberOfLines={1}\n              >\n                {label}\n              </AnimatedText>\n              <AnimatedText\n                style={[\n                  styles.placeholder,\n                  type === \"solid\" ? { paddingHorizontal: 12 } : {},\n                  labelStyle,\n                  {\n                    color: placeholderColor,\n                    opacity: hasActiveOutline ? this.state.labeled : 1,\n                  },\n                ]}\n                numberOfLines={1}\n              >\n                {label}\n              </AnimatedText>\n            </View>\n          ) : null}\n\n          {leftIconName && leftIconMode === \"inset\" ? (\n            <Icon\n              {...leftIconProps}\n              style={{\n                ...leftIconStyle,\n                marginLeft: type === \"solid\" ? 16 : 0,\n              }}\n            />\n          ) : null}\n\n          {render({\n            ref: (c: NativeTextInput) => {\n              this._root = c;\n            },\n            onChange: this._handleChangeText,\n            placeholder: label\n              ? this.state.placeholder\n              : this.props.placeholder,\n            placeholderTextColor: placeholderColor,\n            editable: !disabled,\n            selectionColor: activeColor,\n            multiline,\n            numberOfLines,\n            onFocus: this._handleFocus,\n            onBlur: this._handleBlur,\n            underlineColorAndroid: \"transparent\",\n            style: inputStyles,\n            ...rest,\n            value: this.state.value,\n          })}\n        </View>\n        {rightIconName ? (\n          <Icon\n            name={rightIconName}\n            size={ICON_SIZE}\n            color={colors.light}\n            style={{\n              position: \"absolute\",\n              right: 16,\n              marginTop: type === \"solid\" ? MINIMIZED_LABEL_FONT_SIZE + 4 : 16,\n            }}\n          />\n        ) : null}\n\n        {assistiveText ? (\n          <Text\n            style={[\n              {\n                color: error ? colors.error : colors.light,\n                marginTop: 8,\n                marginLeft: assistiveTextLeftMargin,\n              },\n            ]}\n          >\n            {assistiveText}\n          </Text>\n        ) : null}\n      </View>\n    );\n  }\n}\n\nexport default withTheme(TextField);\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: \"stretch\",\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 0,\n  },\n  underline: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n  },\n  input: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n    textAlignVertical: \"center\",\n    margin: 0,\n    textAlign: I18nManager.isRTL ? \"right\" : \"left\",\n  },\n});\n"]}