{"version":3,"sources":["Slider.ts"],"names":["SEED_DATA","name","tag","description","category","COMPONENT_TYPES","input","layout","marginLeft","marginRight","triggers","Triggers","OnValueChange","props","fieldName","defaultValue","handlerPropName","valuePropName","minimumValue","group","GROUPS","basic","label","min","max","maximumValue","step","precision","leftIcon","rightIcon","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor"],"mappings":";;;;;;;AAAA;;AAUO,MAAMA,SAAS,GAAG;AACvBC,EAAAA,IAAI,EAAE,QADiB;AAEvBC,EAAAA,GAAG,EAAE,QAFkB;AAGvBC,EAAAA,WAAW,EAAE,4CAHU;AAIvBC,EAAAA,QAAQ,EAAEC,uBAAgBC,KAJH;AAKvBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAE,EADN;AAENC,IAAAA,WAAW,EAAE;AAFP,GALe;AASvBC,EAAAA,QAAQ,EAAE,CAACC,gBAASC,aAAV,CATa;AAUvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,gCAAoB;AAC7BC,MAAAA,YAAY,EAAE,aADe;AAE7BC,MAAAA,eAAe,EAAE,eAFY;AAG7BC,MAAAA,aAAa,EAAE;AAHc,KAApB,CADN;AAMLC,IAAAA,YAAY,EAAE,6BAAiB;AAC7BC,MAAAA,KAAK,EAAEC,cAAOC,KADe;AAE7BC,MAAAA,KAAK,EAAE,WAFsB;AAG7BC,MAAAA,GAAG,EAAE,CAHwB;AAI7BC,MAAAA,GAAG,EAAE;AAJwB,KAAjB,CANT;AAYLC,IAAAA,YAAY,EAAE,6BAAiB;AAC7BN,MAAAA,KAAK,EAAEC,cAAOC,KADe;AAE7BC,MAAAA,KAAK,EAAE,WAFsB;AAG7BC,MAAAA,GAAG,EAAE,CAHwB;AAI7BC,MAAAA,GAAG,EAAE;AAJwB,KAAjB,CAZT;AAkBLE,IAAAA,IAAI,EAAE,6BAAiB;AACrBP,MAAAA,KAAK,EAAEC,cAAOC,KADO;AAErBC,MAAAA,KAAK,EAAE,MAFc;AAGrBC,MAAAA,GAAG,EAAE,CAHgB;AAIrBC,MAAAA,GAAG,EAAE,GAJgB;AAKrBE,MAAAA,IAAI,EAAE,IALe;AAMrBC,MAAAA,SAAS,EAAE;AANU,KAAjB,CAlBD;AA0BLC,IAAAA,QAAQ,EAAE,2BAAe;AACvBN,MAAAA,KAAK,EAAE,WADgB;AAEvBP,MAAAA,YAAY,EAAE;AAFS,KAAf,CA1BL;AA8BLc,IAAAA,SAAS,EAAE,2BAAe;AACxBP,MAAAA,KAAK,EAAE,YADiB;AAExBP,MAAAA,YAAY,EAAE;AAFU,KAAf,CA9BN;AAkCLe,IAAAA,qBAAqB,EAAE,4BAAgB;AACrCR,MAAAA,KAAK,EAAE,iBAD8B;AAErCP,MAAAA,YAAY,EAAE;AAFuB,KAAhB,CAlClB;AAsCLgB,IAAAA,qBAAqB,EAAE,4BAAgB;AACrCT,MAAAA,KAAK,EAAE,iBAD8B;AAErCP,MAAAA,YAAY,EAAE;AAFuB,KAAhB,CAtClB;AA0CLiB,IAAAA,cAAc,EAAE,4BAAgB;AAC9BV,MAAAA,KAAK,EAAE,aADuB;AAE9BP,MAAAA,YAAY,EAAE;AAFgB,KAAhB;AA1CX;AAVgB,CAAlB","sourcesContent":["import {\n  COMPONENT_TYPES,\n  GROUPS,\n  createNumberProp,\n  createColorProp,\n  createFieldNameProp,\n  createIconProp,\n  Triggers,\n} from \"@draftbit/types\";\n\nexport const SEED_DATA = {\n  name: \"Slider\",\n  tag: \"Slider\",\n  description: \"A component used to set a value in a range\",\n  category: COMPONENT_TYPES.input,\n  layout: {\n    marginLeft: 12,\n    marginRight: 12,\n  },\n  triggers: [Triggers.OnValueChange],\n  props: {\n    fieldName: createFieldNameProp({\n      defaultValue: \"sliderValue\",\n      handlerPropName: \"onValueChange\",\n      valuePropName: \"value\",\n    }),\n    minimumValue: createNumberProp({\n      group: GROUPS.basic,\n      label: \"Min Value\",\n      min: 0,\n      max: 1000,\n    }),\n    maximumValue: createNumberProp({\n      group: GROUPS.basic,\n      label: \"Max Value\",\n      min: 1,\n      max: 10000,\n    }),\n    step: createNumberProp({\n      group: GROUPS.basic,\n      label: \"Step\",\n      min: 0,\n      max: 100,\n      step: 0.01,\n      precision: 2,\n    }),\n    leftIcon: createIconProp({\n      label: \"Left Icon\",\n      defaultValue: null,\n    }),\n    rightIcon: createIconProp({\n      label: \"Right Icon\",\n      defaultValue: null,\n    }),\n    minimumTrackTintColor: createColorProp({\n      label: \"Min Track Color\",\n      defaultValue: null,\n    }),\n    maximumTrackTintColor: createColorProp({\n      label: \"Max Track Color\",\n      defaultValue: null,\n    }),\n    thumbTintColor: createColorProp({\n      label: \"Thumb Color\",\n      defaultValue: null,\n    }),\n  },\n};\n"]}