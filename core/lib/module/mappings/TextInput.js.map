{"version":3,"sources":["TextInput.ts"],"names":["GROUPS","COMPONENT_TYPES","FORM_TYPES","PROP_TYPES","FIELD_NAME","TEXT_INPUT_PROPS","NUMBER_INPUT_PROPS","Triggers","SEED_DATA_PROPS","style","group","basic","label","description","editable","required","formType","typeStyle","propType","THEME","defaultValue","clearButtonMode","options","flatArray","STRING","clearTextOnFocus","boolean","BOOLEAN","enablesReturnKeyAutomatically","underlineColorAndroid","color","fieldName","handlerPropName","SEED_DATA","name","tag","category","input","preview_image_url","supports_list_render","layout","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","borderColor","paddingLeft","paddingRight","paddingTop","paddingBottom","borderRadius","triggers","OnChangeText","props","multiline","numberOfLines","min","step","precision","number","NUMBER","scrollEnabled","spellcheck","textContentType","advanced","textBreakStrategy"],"mappings":"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","sourcesContent":["import {\n  GROUPS,\n  COMPONENT_TYPES,\n  FORM_TYPES,\n  PROP_TYPES,\n  FIELD_NAME,\n  TEXT_INPUT_PROPS,\n  NUMBER_INPUT_PROPS,\n  Triggers,\n} from \"@draftbit/types\";\n\nexport const SEED_DATA_PROPS = {\n  style: {\n    group: GROUPS.basic,\n    label: \"Style\",\n    description: \"Text Style\",\n    editable: false,\n    required: false,\n    formType: FORM_TYPES.typeStyle,\n    propType: PROP_TYPES.THEME,\n    defaultValue: null,\n  },\n  clearButtonMode: {\n    group: GROUPS.basic,\n    label: \"Clear Button Mode\",\n    description:\n      \"Enables a button within the textInput to clear the data entered\",\n    editable: true,\n    required: false,\n    options: [\"never\", \"while-editing\", \"unless-editing\", \"always\"],\n    defaultValue: null,\n    formType: FORM_TYPES.flatArray,\n    propType: PROP_TYPES.STRING,\n  },\n  clearTextOnFocus: {\n    group: GROUPS.basic,\n    label: \"Clear Text on Focus\",\n    description:\n      \"If true, clears the text field automatically when its focused.\",\n    editable: true,\n    required: false,\n    defaultValue: null,\n    formType: FORM_TYPES.boolean,\n    propType: PROP_TYPES.BOOLEAN,\n  },\n  enablesReturnKeyAutomatically: {\n    group: GROUPS.basic,\n    label: \"Enables Return Key Automatically\",\n    description:\n      \"If true, the keyboard disables the return key when there is no text and automatically enables it when there is (Default: false)\",\n    editable: true,\n    required: false,\n    defaultValue: null,\n    formType: FORM_TYPES.boolean,\n    propType: PROP_TYPES.BOOLEAN,\n  },\n  underlineColorAndroid: {\n    group: GROUPS.basic,\n    label: \"Underline color\",\n    description:\n      \"(Android Only) The color of the underline(the line underneath the text when finished typing.\",\n    editable: true,\n    required: false,\n    defaultValue: null,\n    formType: FORM_TYPES.color,\n    propType: PROP_TYPES.THEME,\n  },\n  fieldName: {\n    ...FIELD_NAME,\n    defaultValue: \"textInputValue\",\n    handlerPropName: \"onChangeText\",\n  },\n};\n\nexport const SEED_DATA = [\n  {\n    name: \"Text Input\",\n    tag: \"TextInput\",\n    description: \"An input field that allows users to type in data.\",\n    category: COMPONENT_TYPES.input,\n    preview_image_url:\n      \"https://res.cloudinary.com/altos/image/upload/draftbit/Jigsaw/TextInput.png\",\n    supports_list_render: false,\n    layout: {\n      borderLeftWidth: 1,\n      borderRightWidth: 1,\n      borderTopWidth: 1,\n      borderBottomWidth: 1,\n      borderColor: \"divider\",\n      paddingLeft: 8,\n      paddingRight: 8,\n      paddingTop: 8,\n      paddingBottom: 8,\n      borderRadius: 8,\n    },\n    triggers: [Triggers.OnChangeText],\n    props: {\n      ...TEXT_INPUT_PROPS,\n      ...SEED_DATA_PROPS,\n      multiline: {\n        group: GROUPS.basic,\n        label: \"Multiple Lines\",\n        description:\n          \"Allows multiple lines of input, useful for situations where the user may be typing in a lot of data.\",\n        editable: true,\n        required: false,\n        defaultValue: null,\n        formType: FORM_TYPES.boolean,\n        propType: PROP_TYPES.BOOLEAN,\n      },\n      numberOfLines: {\n        group: GROUPS.basic,\n        label: \"Number of Lines\",\n        description:\n          \"Sets the number of lines for the input (Multiple Lines needs to be true)\",\n        editable: true,\n        required: false,\n        defaultValue: null,\n        min: 0,\n        step: 1,\n        precision: 0,\n        formType: FORM_TYPES.number,\n        propType: PROP_TYPES.NUMBER,\n      },\n      scrollEnabled: {\n        group: GROUPS.basic,\n        label: \"Scroll Enabled\",\n        description:\n          \"If false, scrolling of the input will be disabled. Only works when Multiple Lines is true\",\n        editable: true,\n        required: false,\n        defaultValue: null,\n        formType: FORM_TYPES.boolean,\n        propType: PROP_TYPES.BOOLEAN,\n      },\n      spellcheck: {\n        group: GROUPS.basic,\n        label: \"Disable Spell Check\",\n        description:\n          \"If false, disables spell-check style (red underlines). Default comes from Auto Correct\",\n        editable: true,\n        required: false,\n        defaultValue: null,\n        formType: FORM_TYPES.boolean,\n        propType: PROP_TYPES.BOOLEAN,\n      },\n      textContentType: {\n        group: GROUPS.advanced,\n        label: \"Text Content Type\",\n        description:\n          \"Give the keyboard and system about what it should do with the input. For example, if its an address, autofill from address book\",\n        editable: true,\n        required: false,\n        defaultValue: null,\n        options: [\n          \"none\",\n          \"URL\",\n          \"addressCity\",\n          \"addressCityAndState\",\n          \"addressState\",\n          \"countryName\",\n          \"creditCardNumber\",\n          \"emailAddress\",\n          \"familyName\",\n          \"fullStreetAddress\",\n          \"givenName\",\n          \"jobTitle\",\n          \"location\",\n          \"middleName\",\n          \"name\",\n          \"namePrefix\",\n          \"nameSuffix\",\n          \"nickname\",\n          \"organizationName\",\n          \"postalCode\",\n          \"streetAddressLine1\",\n          \"streetAddressLine2\",\n          \"sublocality\",\n          \"telephoneNumber\",\n          \"username\",\n          \"password\",\n        ],\n        formType: FORM_TYPES.flatArray,\n        propType: PROP_TYPES.STRING,\n      },\n      textBreakStrategy: {\n        group: GROUPS.advanced,\n        label: \"Text Break Strategy\",\n        description:\n          \"(Android Only) Set the text break strategy. (Default: simple)\",\n        editable: true,\n        required: false,\n        defaultValue: null,\n        options: [\"simple\", \"highQuality\", \"balanced\"],\n        formType: FORM_TYPES.flatArray,\n        propType: PROP_TYPES.STRING,\n      },\n    },\n  },\n  {\n    name: \"Number Input\",\n    tag: \"NumberInput\",\n    description: \"An input field that allows users to type in data.\",\n    category: COMPONENT_TYPES.input,\n    preview_image_url:\n      \"https://res.cloudinary.com/altos/image/upload/draftbit/Jigsaw/TextInput.png\",\n    supports_list_render: false,\n    layout: {\n      borderLeftWidth: 1,\n      borderRightWidth: 1,\n      borderTopWidth: 1,\n      borderBottomWidth: 1,\n      borderColor: \"divider\",\n      paddingLeft: 8,\n      paddingRight: 8,\n      paddingTop: 8,\n      paddingBottom: 8,\n      borderRadius: 8,\n    },\n    triggers: [Triggers.OnChangeText],\n    props: {\n      ...NUMBER_INPUT_PROPS,\n      ...SEED_DATA_PROPS,\n    },\n  },\n];\n"]}