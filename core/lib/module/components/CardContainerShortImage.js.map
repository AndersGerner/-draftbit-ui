{"version":3,"sources":["CardContainerShortImage.tsx"],"names":["React","View","Text","Image","Card","Elevation","withTheme","Config","CardContainerShortImage","image","squareImageUrl","title","subtitle","mode","aspectRatio","elevation","theme","colors","roundness","typography","style","onPress","rest","borderRadius","overflow","flexDirection","justifyContent","uri","padding","backgroundColor","surface","flex","headline5","color","strong","body2","medium","marginTop"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,IAFF,QAMO,cANP;AAOA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAeA,MAAMC,uBAAwC,GAAG,QAW3C;AAAA,MAX4C;AAChDC,IAAAA,KAAK,GAAGF,MAAM,CAACG,cADiC;AAEhDC,IAAAA,KAFgD;AAGhDC,IAAAA,QAHgD;AAIhDC,IAAAA,IAAI,GAAG,MAJyC;AAKhDC,IAAAA,WAAW,GAAG,CALkC;AAMhDC,IAAAA,SAAS,GAAG,CANoC;AAOhDC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,SAAV;AAAqBC,MAAAA;AAArB,KAPyC;AAQhDC,IAAAA,KARgD;AAShDC,IAAAA,OATgD;AAUhD,OAAGC;AAV6C,GAW5C;AACJ,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,KAAb;AAAoB,IAAA,OAAO,EAAEC;AAA7B,KAA0CC,IAA1C,gBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AACLP,MAAAA,SADK;AAELQ,MAAAA,YAAY,EAAEL;AAFT;AADT,kBAME,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLM,MAAAA,QAAQ,EAAE,QADL;AAELC,MAAAA,aAAa,EAAE,KAFV;AAGLC,MAAAA,cAAc,EAAEb,IAAI,KAAK,OAAT,GAAmB,eAAnB,GAAqC,YAHhD;AAILU,MAAAA,YAAY,EAAEL;AAJT;AADT,KAQGL,IAAI,KAAK,MAAT,iBACC,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADT;AAEE,IAAA,MAAM,EAAE,OAAOL,KAAP,KAAiB,QAAjB,GAA4B;AAAEkB,MAAAA,GAAG,EAAElB;AAAP,KAA5B,GAA6CA,KAFvD;AAGE,IAAA,UAAU,EAAC;AAHb,IATJ,eAeE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLmB,MAAAA,OAAO,EAAE,EADJ;AAELC,MAAAA,eAAe,EAAEZ,MAAM,CAACa,OAFnB;AAGLC,MAAAA,IAAI,EAAE;AAHD;AADT,kBAOE,oBAAC,IAAD;AACE,IAAA,aAAa,EAAE,CADjB;AAEE,IAAA,KAAK,EAAE,CAACZ,UAAU,CAACa,SAAZ,EAAuB;AAAEC,MAAAA,KAAK,EAAEhB,MAAM,CAACiB;AAAhB,KAAvB;AAFT,KAIGvB,KAJH,CAPF,EAaGC,QAAQ,gBACP,oBAAC,IAAD;AACE,IAAA,aAAa,EAAE,CADjB;AAEE,IAAA,KAAK,EAAE,CACLO,UAAU,CAACgB,KADN,EAEL;AAAEF,MAAAA,KAAK,EAAEhB,MAAM,CAACmB,MAAhB;AAAwBC,MAAAA,SAAS,EAAE;AAAnC,KAFK;AAFT,KAOGzB,QAPH,CADO,GAUL,IAvBN,CAfF,EAwCGC,IAAI,KAAK,OAAT,iBACC,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADT;AAEE,IAAA,MAAM,EAAE,OAAOL,KAAP,KAAiB,QAAjB,GAA4B;AAAEkB,MAAAA,GAAG,EAAElB;AAAP,KAA5B,GAA6CA,KAFvD;AAGE,IAAA,UAAU,EAAC;AAHb,IAzCJ,CANF,CADF,CADF;AA2DD,CAvED;;AAyEA,eAAeH,SAAS,CAACE,uBAAD,CAAxB","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  Text,\n  ImageSourcePropType,\n  StyleProp,\n  ViewStyle,\n} from \"react-native\";\nimport Image from \"./Image\";\nimport Card from \"./DeprecatedCardWrapper\";\nimport Elevation from \"./Elevation\";\nimport { withTheme } from \"../theming\";\nimport Config from \"./Config\";\nimport theme from \"../styles/DefaultTheme\";\n\ntype Props = {\n  image?: string | ImageSourcePropType;\n  title?: string;\n  subtitle?: string;\n  mode?: \"right\" | \"left\";\n  aspectRatio?: number;\n  elevation?: number;\n  theme: typeof theme;\n  style?: StyleProp<ViewStyle>;\n  onPress: () => void;\n};\n\nconst CardContainerShortImage: React.FC<Props> = ({\n  image = Config.squareImageUrl,\n  title,\n  subtitle,\n  mode = \"left\",\n  aspectRatio = 1,\n  elevation = 2,\n  theme: { colors, roundness, typography },\n  style,\n  onPress,\n  ...rest\n}) => {\n  return (\n    <Card style={style} onPress={onPress} {...rest}>\n      <Elevation\n        style={{\n          elevation,\n          borderRadius: roundness,\n        }}\n      >\n        <View\n          style={{\n            overflow: \"hidden\",\n            flexDirection: \"row\",\n            justifyContent: mode === \"right\" ? \"space-between\" : \"flex-start\",\n            borderRadius: roundness,\n          }}\n        >\n          {mode === \"left\" && (\n            <Image\n              style={{ aspectRatio }}\n              source={typeof image === \"string\" ? { uri: image } : image}\n              resizeMode=\"cover\"\n            />\n          )}\n          <View\n            style={{\n              padding: 16,\n              backgroundColor: colors.surface,\n              flex: 1,\n            }}\n          >\n            <Text\n              numberOfLines={1}\n              style={[typography.headline5, { color: colors.strong }]}\n            >\n              {title}\n            </Text>\n            {subtitle ? (\n              <Text\n                numberOfLines={1}\n                style={[\n                  typography.body2,\n                  { color: colors.medium, marginTop: 4 },\n                ]}\n              >\n                {subtitle}\n              </Text>\n            ) : null}\n          </View>\n          {mode === \"right\" && (\n            <Image\n              style={{ aspectRatio }}\n              source={typeof image === \"string\" ? { uri: image } : image}\n              resizeMode=\"cover\"\n            />\n          )}\n        </View>\n      </Elevation>\n    </Card>\n  );\n};\n\nexport default withTheme(CardContainerShortImage);\n"]}