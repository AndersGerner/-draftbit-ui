{"version":3,"sources":["ActionSheet.tsx"],"names":["React","View","StyleSheet","Portal","Touchable","ActionSheetCancel","ActionSheet","visible","onClose","children","styles","wrapper","overlay","groupWrapper","group","Children","toArray","filter","child","type","create","flex","display","flexDirection","position","top","left","right","bottom","backgroundColor","opacity","justifyContent","marginBottom","borderRadius","marginHorizontal","marginVertical","overflow"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,cAAjC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAQA,MAAMC,WAAW,GAAG,QAAmD;AAAA,MAAlD;AAAEC,IAAAA,OAAO,GAAG,KAAZ;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,GAAkD;AACrE,SAAOF,OAAO,gBACZ,oBAAC,MAAD,qBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEG,MAAM,CAACC,OAAzB;AAAkC,IAAA,OAAO,EAAEH;AAA3C,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACE;AAApB,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,KACGd,KAAK,CAACe,QAAN,CAAeC,OAAf,CAAuBP,QAAvB,EAAiCQ,MAAjC,CACEC,KAAD,IAAgB,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,IAAP,MAAgBd,iBADjC,CADH,CADF,eAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACI;AAApB,KACGd,KAAK,CAACe,QAAN,CAAeC,OAAf,CAAuBP,QAAvB,EAAiCQ,MAAjC,CACEC,KAAD,IAAgBA,KAAK,CAACC,IAAN,KAAed,iBADhC,CADH,CANF,CAFF,CADF,CADY,gBAmBZ,yCAnBF;AAqBD,CAtBD;;AAwBA,MAAMK,MAAM,GAAGR,UAAU,CAACkB,MAAX,CAAkB;AAC/BT,EAAAA,OAAO,EAAE;AACPU,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,OAAO,EAAE,MAFF;AAGPC,IAAAA,aAAa,EAAE;AAHR,GADsB;AAM/BX,EAAAA,OAAO,EAAE;AACPY,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,GAAG,EAAE,CAFE;AAGPC,IAAAA,IAAI,EAAE,CAHC;AAIPC,IAAAA,KAAK,EAAE,CAJA;AAKPC,IAAAA,MAAM,EAAE,CALD;AAMPC,IAAAA,eAAe,EAAE,SANV;AAOPC,IAAAA,OAAO,EAAE;AAPF,GANsB;AAe/BjB,EAAAA,YAAY,EAAE;AACZQ,IAAAA,IAAI,EAAE,CADM;AAEZE,IAAAA,aAAa,EAAE,QAFH;AAGZQ,IAAAA,cAAc,EAAE,UAHJ;AAIZT,IAAAA,OAAO,EAAE,MAJG;AAKZU,IAAAA,YAAY,EAAE;AALF,GAfiB;AAsB/BlB,EAAAA,KAAK,EAAE;AACLQ,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,aAAa,EAAE,QAFV;AAGLU,IAAAA,YAAY,EAAE,EAHT;AAILC,IAAAA,gBAAgB,EAAE,CAJb;AAKLC,IAAAA,cAAc,EAAE,GALX;AAMLC,IAAAA,QAAQ,EAAE;AANL;AAtBwB,CAAlB,CAAf;AAgCA,eAAe9B,WAAf","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport Portal from \"../Portal/Portal\";\nimport Touchable from \"../Touchable\";\nimport ActionSheetCancel from \"./ActionSheetCancel\";\n\ninterface Props {\n  visible: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n}\n\nconst ActionSheet = ({ visible = false, onClose, children }: Props) => {\n  return visible ? (\n    <Portal>\n      <Touchable style={styles.wrapper} onPress={onClose}>\n        <View style={styles.overlay} />\n        <View style={styles.groupWrapper}>\n          <View style={styles.group}>\n            {React.Children.toArray(children).filter(\n              (child: any) => child?.type !== ActionSheetCancel\n            )}\n          </View>\n          <View style={styles.group}>\n            {React.Children.toArray(children).filter(\n              (child: any) => child.type === ActionSheetCancel\n            )}\n          </View>\n        </View>\n      </Touchable>\n    </Portal>\n  ) : (\n    <></>\n  );\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  overlay: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"#000000\",\n    opacity: 0.3,\n  },\n  groupWrapper: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"flex-end\",\n    display: \"flex\",\n    marginBottom: 25,\n  },\n  group: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    borderRadius: 10,\n    marginHorizontal: 7,\n    marginVertical: 2.5,\n    overflow: \"hidden\",\n  },\n});\n\nexport default ActionSheet;\n"]}