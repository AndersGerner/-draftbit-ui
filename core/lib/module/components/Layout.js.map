{"version":3,"sources":["Layout.tsx"],"names":["React","View","Center","width","height","children","bgColor","style","rest","justifyContent","alignItems","backgroundColor","Circle","size","borderRadius","overflow","Square","Row","flexDirection","Spacer","top","right","bottom","left","paddingRight","paddingTop","paddingLeft","paddingBottom","Stack"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { View, StyleProp, ViewStyle } from \"react-native\";\n// @ts-ignore\nimport type { ViewStyleProp } from \"react-native/Libraries/StyleSheet/StyleSheet\";\n\nexport function Center({\n  width = 240,\n  height = 200,\n  children,\n  bgColor,\n  style,\n  ...rest\n}: {\n  width: number;\n  height: number;\n  bgColor: string;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n}) {\n  return (\n    <View\n      style={[\n        {\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width,\n          height,\n          backgroundColor: bgColor,\n        },\n        style,\n      ]}\n      {...rest}\n    >\n      {children}\n    </View>\n  );\n}\n\nexport function Circle({\n  size = 50,\n  bgColor,\n  children,\n  style,\n  ...rest\n}: {\n  size: number;\n  bgColor: string;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n}) {\n  const borderRadius = 1000;\n  return (\n    <Center\n      width={size}\n      height={size}\n      bgColor={bgColor}\n      style={[\n        style,\n        { backgroundColor: bgColor, borderRadius, overflow: \"hidden\" },\n      ]}\n      {...rest}\n    >\n      {children}\n    </Center>\n  );\n}\n\nexport function Square({\n  size = 50,\n  bgColor,\n  children,\n  style,\n  ...rest\n}: {\n  size: number;\n  bgColor: string;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n}) {\n  return (\n    <Center\n      style={style}\n      width={size}\n      height={size}\n      bgColor={bgColor}\n      {...rest}\n    >\n      {children}\n    </Center>\n  );\n}\n\nexport function Row({\n  justifyContent,\n  alignItems,\n  children,\n  style,\n  ...rest\n}: {\n  alignItems: ViewStyleProp.alignItems;\n  justifyContent: ViewStyleProp.justifyContent;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n}) {\n  return (\n    <View\n      style={[\n        style, // style goes first b/c we can't override these\n        {\n          alignItems,\n          flexDirection: \"row\",\n          justifyContent: justifyContent,\n        },\n      ]}\n      {...rest}\n    >\n      {children}\n    </View>\n  );\n}\n\nexport function Spacer({\n  top = 8,\n  right = 8,\n  bottom = 8,\n  left = 8,\n  children,\n  style,\n  ...rest\n}: {\n  top?: number;\n  right?: number;\n  left?: number;\n  bottom?: number;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n}) {\n  return (\n    <View\n      style={[\n        style,\n        {\n          paddingRight: right,\n          paddingTop: top,\n          paddingLeft: left,\n          paddingBottom: bottom,\n        },\n      ]}\n      {...rest}\n    >\n      {children}\n    </View>\n  );\n}\n\nexport function Stack({\n  children,\n  justifyContent = \"flex-start\",\n  alignItems = \"flex-start\",\n  style,\n  ...rest\n}: {\n  justifyContent: ViewStyleProp.justifyContent;\n  alignItems: ViewStyleProp.alignItems;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n}) {\n  return (\n    // style must go first since we don't want justifyContent, alignItems overridden\n    <View style={[style, { justifyContent, alignItems }]} {...rest}>\n      {children}\n    </View>\n  );\n}\n"]}