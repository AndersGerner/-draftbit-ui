{"version":3,"sources":["StarRating.tsx"],"names":["React","View","StyleSheet","Pressable","withTheme","StarRating","Icon","starSize","maxStars","rating","defaultValue","isEditable","activeColor","inactiveColor","style","onPress","rest","localRating","setLocalRating","useState","useEffect","ratingHandler","useCallback","r","ratingRounded","Math","round","styles","container","Array","map","_","i","display","touchContainer","pressable","create","flexDirection","alignItems","position","top","right","left","bottom","zIndex","flex","height","width"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,IADF,EAEEC,UAFF,EAKEC,SALF,QAMO,cANP;AAOA,SAASC,SAAT,QAA0B,YAA1B;;AAiBA,MAAMC,UAA2B,GAAG,QAY9B;AAAA,MAZ+B;AACnCC,IAAAA,IADmC;AAEnCC,IAAAA,QAAQ,GAAG,EAFwB;AAGnCC,IAAAA,QAAQ,GAAG,CAHwB;AAInCC,IAAAA,MAAM,GAAG,CAJ0B;AAKnCC,IAAAA,YALmC;AAMnCC,IAAAA,UAAU,GAAG,KANsB;AAOnCC,IAAAA,WAPmC;AAQnCC,IAAAA,aARmC;AASnCC,IAAAA,KATmC;AAUnCC,IAAAA,OAVmC;AAWnC,OAAGC;AAXgC,GAY/B;AACJ,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgClB,KAAK,CAACmB,QAAN,CACpCV,MAAM,IAAIC,YAAV,IAA0B,CADU,CAAtC;AAIAV,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpB,QAAIX,MAAM,IAAI,IAAd,EAAoB;AAClBS,MAAAA,cAAc,CAACT,MAAD,CAAd;AACD;AACF,GAJD,EAIG,CAACA,MAAD,CAJH;AAMAT,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpB,QAAIV,YAAY,IAAI,IAApB,EAA0B;AACxBQ,MAAAA,cAAc,CAACR,YAAD,CAAd;AACD;AACF,GAJD,EAIG,CAACA,YAAD,CAJH;AAMA,QAAMW,aAAa,GAAGrB,KAAK,CAACsB,WAAN,CACnBC,CAAD,IAAO;AACLL,IAAAA,cAAc,CAACK,CAAD,CAAd;AACA,KAAC,CAACR,OAAF,IAAaA,OAAO,CAACQ,CAAD,CAApB;AACD,GAJmB,EAKpB,CAACR,OAAD,CALoB,CAAtB;AAQA,QAAMS,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWT,WAAW,GAAG,CAAzB,IAA8B,CAApD;AAEA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACU,MAAM,CAACC,SAAR,EAAmBd,KAAnB;AAAb,KAA4CE,IAA5C,GACG,CAAC,GAAGa,KAAK,CAACrB,QAAD,CAAT,EAAqBsB,GAArB,CAAyB,CAACC,CAAD,EAAIC,CAAJ,kBACxB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,CAAX;AAAc,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AAArB,kBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EACFT,aAAa,GAAGQ,CAAhB,KAAsB,GAAtB,GACI,yBADJ,GAEI,oBAJR;AAME,IAAA,IAAI,EAAEzB,QANR;AAOE,IAAA,KAAK,EAAEiB,aAAa,GAAGQ,CAAhB,GAAoBpB,WAApB,GAAkCC;AAP3C,IADF,EAUGF,UAAU,iBACT,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgB,MAAM,CAACO;AAApB,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEP,MAAM,CAACQ,SADhB;AAEE,IAAA,OAAO,EAAE,MAAMd,aAAa,CAACW,CAAC,GAAG,GAAL;AAF9B,IADF,eAKE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEL,MAAM,CAACQ,SADhB;AAEE,IAAA,OAAO,EAAE,MAAMd,aAAa,CAACW,CAAC,GAAG,CAAL;AAF9B,IALF,CAXJ,CADD,CADH,CADF;AA6BD,CApED;;AAsEA,MAAML,MAAM,GAAGzB,UAAU,CAACkC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,UAAU,EAAE;AAFH,GADoB;AAK/BJ,EAAAA,cAAc,EAAE;AACdD,IAAAA,OAAO,EAAE,MADK;AAEdI,IAAAA,aAAa,EAAE,KAFD;AAGdE,IAAAA,QAAQ,EAAE,UAHI;AAIdC,IAAAA,GAAG,EAAE,CAJS;AAKdC,IAAAA,KAAK,EAAE,CALO;AAMdC,IAAAA,IAAI,EAAE,CANQ;AAOdC,IAAAA,MAAM,EAAE,CAPM;AAQdC,IAAAA,MAAM,EAAE;AARM,GALe;AAe/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,MAAM,EAAE,MAFC;AAGTC,IAAAA,KAAK,EAAE;AAHE;AAfoB,CAAlB,CAAf;AAsBA,eAAe3C,SAAS,CAACC,UAAD,CAAxB","sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n  Pressable,\n} from \"react-native\";\nimport { withTheme } from \"../theming\";\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport type { IconSlot } from \"../interfaces/Icon\";\n\ntype Props = {\n  starSize?: number;\n  maxStars?: number;\n  rating?: number;\n  defaultValue?: number;\n  isEditable?: boolean;\n  activeColor?: string;\n  inactiveColor?: string;\n  theme: Theme;\n  style?: StyleProp<ViewStyle>;\n  onPress?: (newValue: number) => void;\n} & IconSlot;\n\nconst StarRating: React.FC<Props> = ({\n  Icon,\n  starSize = 16,\n  maxStars = 5,\n  rating = 0,\n  defaultValue,\n  isEditable = false,\n  activeColor,\n  inactiveColor,\n  style,\n  onPress,\n  ...rest\n}) => {\n  const [localRating, setLocalRating] = React.useState<number>(\n    rating || defaultValue || 0\n  );\n\n  React.useEffect(() => {\n    if (rating != null) {\n      setLocalRating(rating);\n    }\n  }, [rating]);\n\n  React.useEffect(() => {\n    if (defaultValue != null) {\n      setLocalRating(defaultValue);\n    }\n  }, [defaultValue]);\n\n  const ratingHandler = React.useCallback(\n    (r) => {\n      setLocalRating(r);\n      !!onPress && onPress(r);\n    },\n    [onPress]\n  );\n\n  const ratingRounded = Math.round(localRating * 2) / 2;\n\n  return (\n    <View style={[styles.container, style]} {...rest}>\n      {[...Array(maxStars)].map((_, i) => (\n        <View key={i} style={{ display: \"flex\" }}>\n          <Icon\n            name={\n              ratingRounded - i === 0.5\n                ? \"MaterialIcons/star-half\"\n                : \"MaterialIcons/star\"\n            }\n            size={starSize}\n            color={ratingRounded > i ? activeColor : inactiveColor}\n          />\n          {isEditable && (\n            <View style={styles.touchContainer}>\n              <Pressable\n                style={styles.pressable}\n                onPress={() => ratingHandler(i + 0.5)}\n              />\n              <Pressable\n                style={styles.pressable}\n                onPress={() => ratingHandler(i + 1)}\n              />\n            </View>\n          )}\n        </View>\n      ))}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  touchContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: 1,\n  },\n  pressable: {\n    flex: 1,\n    height: \"100%\",\n    width: \"50%\",\n  },\n});\n\nexport default withTheme(StarRating);\n"]}