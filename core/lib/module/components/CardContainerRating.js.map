{"version":3,"sources":["CardContainerRating.tsx"],"names":["React","View","Text","color","Image","Card","Elevation","StarRating","withTheme","Config","ICON_CONTAINER_SIZE","cardIconSize","ICON_CONTAINER_PADDING","CardContainerRating","Icon","icon","image","cardImageUrl","title","leftDescription","rightDescription","rating","aspectRatio","elevation","numColumns","theme","colors","roundness","typography","style","onPress","rest","titleStyle","rightDescriptionStyle","headline6","body2","headline5","caption","borderRadius","overflow","backgroundColor","background","uri","padding","flexDirection","alignItems","justifyContent","strong","medium","marginTop","marginLeft","cardIconElevation","position","top","right","width","height","alpha","cardIconBackgroundOpacity","rgb","string","surface"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  ImageSourcePropType,\n  Text,\n  StyleProp,\n  ViewStyle,\n} from \"react-native\";\nimport color from \"color\";\nimport Image from \"./Image\";\nimport Card from \"./DeprecatedCardWrapper\";\nimport Elevation from \"./Elevation\";\nimport StarRating from \"./StarRating\";\nimport { withTheme } from \"../theming\";\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport type { IconSlot } from \"../interfaces/Icon\";\n\nimport Config from \"./Config\";\n\nconst ICON_CONTAINER_SIZE = Config.cardIconSize * 2;\nconst ICON_CONTAINER_PADDING = Config.cardIconSize / 2 - 1;\n\ntype Props = {\n  image?: string | ImageSourcePropType;\n  title?: string;\n  leftDescription?: string;\n  rightDescription?: string;\n  textCentered: boolean;\n  icon?: string;\n  rating: number;\n  aspectRatio?: number;\n  elevation?: number;\n  numColumns?: number;\n  theme: Theme;\n  style?: StyleProp<ViewStyle>;\n  onPress: () => void;\n} & IconSlot;\n\nconst CardContainerRating: React.FC<Props> = ({\n  Icon,\n  icon,\n  image = Config.cardImageUrl,\n  title,\n  leftDescription,\n  rightDescription,\n  rating,\n  aspectRatio = 1.5,\n  elevation = 2,\n  numColumns = 3,\n  theme: { colors, roundness, typography },\n  style,\n  onPress,\n  ...rest\n}) => {\n  let titleStyle, rightDescriptionStyle;\n  switch (numColumns) {\n    case 2:\n      titleStyle = typography.headline6;\n      rightDescriptionStyle = typography.body2;\n      break;\n    case 3:\n      titleStyle = typography.headline5;\n      rightDescriptionStyle = typography.caption;\n      break;\n  }\n\n  return (\n    <Card style={style} onPress={onPress} numColumns={numColumns} {...rest}>\n      <Elevation style={{ elevation, borderRadius: roundness }}>\n        <View\n          style={{\n            borderRadius: roundness,\n            overflow: \"hidden\",\n            backgroundColor: colors.background,\n            //background color is needed for bug on android 9 - https://github.com/facebook/react-native/issues/25093\n          }}\n        >\n          <Image\n            style={{ aspectRatio }}\n            source={typeof image === \"string\" ? { uri: image } : image}\n            resizeMode=\"cover\"\n          />\n          <View\n            style={{\n              padding: numColumns === 1 ? 8 : 16,\n            }}\n          >\n            {title ? (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text\n                  numberOfLines={1}\n                  style={[titleStyle, { color: colors.strong }]}\n                >\n                  {title}\n                </Text>\n              </View>\n            ) : null}\n            {leftDescription ? (\n              <Text\n                numberOfLines={1}\n                style={[\n                  typography.body2,\n                  {\n                    color: colors.medium,\n                    marginTop: numColumns === 3 ? 4 : 4 / 2,\n                  },\n                ]}\n              >\n                {leftDescription}\n              </Text>\n            ) : null}\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                marginTop: numColumns === 3 ? 16 : 12,\n              }}\n            >\n              <StarRating\n                Icon={Icon}\n                starSize={numColumns === 1 ? 10 : 16}\n                rating={rating}\n              />\n              <Text\n                style={[\n                  rightDescriptionStyle,\n                  {\n                    color: colors.medium,\n                    marginLeft: 8,\n                  },\n                ]}\n                numberOfLines={1}\n              >\n                {rightDescription}\n              </Text>\n            </View>\n          </View>\n          {icon ? (\n            <Elevation\n              style={{\n                elevation: Config.cardIconElevation,\n                position: \"absolute\",\n                top: 12,\n                right: 12,\n                width: ICON_CONTAINER_SIZE,\n                height: ICON_CONTAINER_SIZE,\n                padding: ICON_CONTAINER_PADDING,\n                borderRadius: ICON_CONTAINER_SIZE,\n                backgroundColor: color(colors.strong)\n                  .alpha(Config.cardIconBackgroundOpacity)\n                  .rgb()\n                  .string(),\n              }}\n            >\n              <Icon\n                name={icon}\n                size={Config.cardIconSize}\n                color={colors.surface}\n              />\n            </Elevation>\n          ) : null}\n        </View>\n      </Elevation>\n    </Card>\n  );\n};\n\nexport default withTheme(CardContainerRating);\n"]}