{"version":3,"sources":["Text.tsx"],"names":["React","Text","NativeText","I18nManager","withTheme","Component","setNativeProps","args","_root","render","style","rest","props","writingDirection","isRTL","c","textAlign","BaseLink","theme","title","color","colors","primary","alignSelf","Link"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAI,IAAIC,UAAjB,EAA6BC,WAA7B,QAA2D,cAA3D;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAOA,MAAMH,IAAN,SAAmBD,KAAK,CAACK,SAAzB,CAA0C;AAAA;AAAA;;AAAA;AAAA;;AAGxCC,EAAAA,cAAc,CAACC,IAAD,EAAkB;AAC9B,WAAO,KAAKC,KAAL,IAAc,KAAKA,KAAL,CAAWF,cAAX,CAA0BC,IAA1B,CAArB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAAS,SAAGC;AAAZ,QAAqB,KAAKC,KAAhC;AACA,UAAMC,gBAAgB,GAAGV,WAAW,CAACW,KAAZ,GAAoB,KAApB,GAA4B,KAArD;AAEA,wBACE,oBAAC,UAAD,eACMH,IADN;AAEE,MAAA,GAAG,EAAGI,CAAD,IAAO;AACV,aAAKP,KAAL,GAAaO,CAAb;AACD,OAJH;AAKE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,SAAS,EAAE,MADb;AAEEH,QAAAA;AAFF,OADK,EAKLH,KALK;AALT,OADF;AAeD;;AA1BuC;;AA6B1C,OAAO,MAAMO,QAAQ,GAAG,QAKA;AAAA,MALC;AACvBP,IAAAA,KADuB;AAEvBQ,IAAAA,KAFuB;AAGvBC,IAAAA,KAHuB;AAIvB,OAAGP;AAJoB,GAKD;AACtB,sBACE,oBAAC,IAAD;AACE,IAAA,OAAO,EAAE,CADX;AAEE,IAAA,KAAK,EAAE,CAAC;AAAEQ,MAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaC,OAAtB;AAA+BC,MAAAA,SAAS,EAAE;AAA1C,KAAD,EAAyDb,KAAzD,CAFT;AAGE,IAAA,KAAK,EAAEQ;AAHT,KAIMN,KAJN,GAMGO,KANH,CADF;AAUD,CAhBM;AAkBP,MAAMK,IAAS,GAAGpB,SAAS,CAACa,QAAD,CAA3B;AACA,SAASO,IAAT;AAEA,eAAepB,SAAS,CAACH,IAAD,CAAxB","sourcesContent":["import * as React from \"react\";\nimport { Text as NativeText, I18nManager, TextProps } from \"react-native\";\nimport { withTheme } from \"../theming\";\nimport type { Theme } from \"../styles/DefaultTheme\";\n\ntype Props = {\n  theme: Theme;\n} & TextProps;\n\nclass Text extends React.Component<Props> {\n  _root: any;\n\n  setNativeProps(args: TextProps) {\n    return this._root && this._root.setNativeProps(args);\n  }\n\n  render() {\n    const { style, ...rest } = this.props;\n    const writingDirection = I18nManager.isRTL ? \"rtl\" : \"ltr\";\n\n    return (\n      <NativeText\n        {...rest}\n        ref={(c) => {\n          this._root = c;\n        }}\n        style={[\n          {\n            textAlign: \"left\",\n            writingDirection,\n          },\n          style,\n        ]}\n      />\n    );\n  }\n}\n\nexport const BaseLink = ({\n  style,\n  theme,\n  title,\n  ...props\n}: any): JSX.Element => {\n  return (\n    <Text\n      hitSlop={8}\n      style={[{ color: theme.colors.primary, alignSelf: \"baseline\" }, style]}\n      theme={theme}\n      {...props}\n    >\n      {title}\n    </Text>\n  );\n};\n\nconst Link: any = withTheme(BaseLink);\nexport { Link };\n\nexport default withTheme(Text);\n"]}