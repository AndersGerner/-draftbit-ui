{"version":3,"sources":["Divider.tsx"],"names":["React","StyleSheet","View","withTheme","Divider","style","color","theme","colors","rest","backgroundColor","divider","height","hairlineWidth"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAuD,cAAvD;AACA,SAASC,SAAT,QAA0B,YAA1B;;AASA,MAAMC,OAAwB,GAAG,QAK3B;AAAA,MAL4B;AAChCC,IAAAA,KADgC;AAEhCC,IAAAA,KAFgC;AAGhCC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KAHyB;AAIhC,OAAGC;AAJ6B,GAK5B;AACJ,sBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACL;AACEC,MAAAA,eAAe,EAAEJ,KAAK,IAAIE,MAAM,CAACG,OADnC;AAEEC,MAAAA,MAAM,EAAEX,UAAU,CAACY;AAFrB,KADK,EAKLR,KALK;AADT,KAQMI,IARN,EADF;AAYD,CAlBD;;AAoBA,eAAeN,SAAS,CAACC,OAAD,CAAxB","sourcesContent":["import * as React from \"react\";\nimport { StyleSheet, View, StyleProp, ViewStyle } from \"react-native\";\nimport { withTheme } from \"../theming\";\nimport theme from \"../styles/DefaultTheme\";\n\ntype Props = {\n  style?: StyleProp<ViewStyle>;\n  color?: string;\n  theme: typeof theme;\n};\n\nconst Divider: React.FC<Props> = ({\n  style,\n  color,\n  theme: { colors },\n  ...rest\n}) => {\n  return (\n    <View\n      style={[\n        {\n          backgroundColor: color || colors.divider,\n          height: StyleSheet.hairlineWidth,\n        },\n        style,\n      ]}\n      {...rest}\n    />\n  );\n};\n\nexport default withTheme(Divider);\n"]}