{"version":3,"sources":["Card.tsx"],"names":["React","StyleSheet","View","Pressable","Image","Surface","Title","Subtitle","Caption","withTheme","Config","ICON_SIZE","cardIconSize","ICON_CONTAINER_SIZE","ICON_CONTAINER_PADDING","ICON_ELEVATION","cardIconElevation","TopRightCircleIcon","Icon","icon","theme","onPress","justifyContent","alignItems","elevation","position","top","right","width","height","padding","borderRadius","backgroundColor","pressed","opacity","colors","surface","Card","image","cardImageUrl","title","subtitle","description","textCentered","aspectRatio","style","onPressIcon","titleStyle","subtitleStyle","descriptionStyle","children","bgColor","styles","flatten","innerPadding","uri","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  View,\n  ImageSourcePropType,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  Pressable,\n} from \"react-native\";\nimport Image from \"./Image\";\nimport Surface from \"./Surface\";\nimport { Title, Subtitle, Caption } from \"./Typography\";\n\nimport { withTheme } from \"../theming\";\nimport Config from \"./Config\";\n\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport type { IconSlot } from \"../interfaces/Icon\";\n\nconst ICON_SIZE = Config.cardIconSize;\nconst ICON_CONTAINER_SIZE = Config.cardIconSize * 2;\nconst ICON_CONTAINER_PADDING = Config.cardIconSize / 2 - 1;\nconst ICON_ELEVATION = Config.cardIconElevation;\n\nexport const TopRightCircleIcon = withTheme(\n  ({\n    Icon,\n    icon,\n    theme,\n    onPress,\n  }: {\n    icon: string;\n    theme: Theme;\n    onPress?: () => void;\n  } & IconSlot) => {\n    return (\n      <Surface\n        style={{\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          elevation: ICON_ELEVATION,\n          position: \"absolute\",\n          top: 12,\n          right: 12,\n          width: ICON_CONTAINER_SIZE,\n          height: ICON_CONTAINER_SIZE,\n          padding: ICON_CONTAINER_PADDING,\n          borderRadius: ICON_CONTAINER_SIZE,\n          backgroundColor: \"rgba(0, 0, 0, 0.1)\",\n        }}\n      >\n        <Pressable\n          disabled={!onPress}\n          onPress={onPress}\n          style={({ pressed }) => {\n            return [\n              {\n                opacity: pressed ? 0.8 : 1,\n              },\n            ];\n          }}\n        >\n          <Icon name={icon} size={ICON_SIZE} color={theme.colors.surface} />\n        </Pressable>\n      </Surface>\n    );\n  }\n);\n\ntype Props = {\n  image?: string | ImageSourcePropType;\n  title?: string;\n  subtitle?: string;\n  description?: string;\n  textCentered: boolean;\n  icon?: string;\n  aspectRatio?: number;\n  elevation?: number;\n  numColumns?: number;\n  theme: Theme;\n  titleStyle?: StyleProp<TextStyle>;\n  subtitleStyle?: StyleProp<TextStyle>;\n  descriptionStyle?: StyleProp<TextStyle>;\n  style?: StyleProp<ViewStyle>;\n  onPress?: () => void;\n  onPressIcon?: () => void;\n  children?: React.ReactNode;\n} & IconSlot;\n\nconst Card: React.FC<Props> = ({\n  Icon,\n  image = Config.cardImageUrl,\n  title,\n  subtitle,\n  description,\n  textCentered,\n  icon,\n  aspectRatio = 1.5,\n  elevation = 2,\n  style,\n  onPress,\n  onPressIcon,\n  titleStyle,\n  subtitleStyle,\n  descriptionStyle,\n  theme,\n  children,\n}) => {\n  const {\n    backgroundColor: bgColor,\n    padding,\n    ...styles\n  } = StyleSheet.flatten(style || {});\n\n  const backgroundColor = bgColor ? bgColor : theme.colors.surface;\n  const innerPadding = padding ? padding : 12;\n\n  return (\n    <Surface style={[{ elevation, backgroundColor }, styles]}>\n      <Pressable\n        disabled={!onPress}\n        onPress={onPress}\n        style={({ pressed }) => {\n          return [\n            {\n              opacity: pressed ? 0.8 : 1,\n            },\n          ];\n        }}\n      >\n        <Image\n          style={{ aspectRatio }}\n          source={typeof image === \"string\" ? { uri: image } : image}\n          resizeMode=\"cover\"\n        />\n        <View style={{ padding: innerPadding }}>\n          <View style={{ alignItems: textCentered ? \"center\" : \"flex-start\" }}>\n            {title || (title && title !== \"\") ? (\n              <Title text={title} style={titleStyle} />\n            ) : null}\n            {subtitle || (subtitle && subtitle !== \"\") ? (\n              <Subtitle text={subtitle} style={subtitleStyle} />\n            ) : null}\n            {description || (description && description !== \"\") ? (\n              <View style={{ marginTop: 4 }}>\n                <Caption text={description} style={descriptionStyle} />\n              </View>\n            ) : null}\n            {children}\n          </View>\n        </View>\n        {icon ? (\n          <TopRightCircleIcon Icon={Icon} icon={icon} onPress={onPressIcon} />\n        ) : null}\n      </Pressable>\n    </Surface>\n  );\n};\n\nexport default withTheme(Card);\n"]}