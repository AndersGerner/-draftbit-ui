{"version":3,"sources":["CardInline.tsx"],"names":["React","Pressable","View","StyleSheet","Title","Subtitle","Image","Surface","Config","withTheme","CardInline","image","cardImageUrl","title","subtitle","aspectRatio","elevation","style","titleStyle","subtitleStyle","onPress","alignItems","justifyContent","width","height","flatten","imageStyles","pressed","opacity","uri","styles","overlay","color","create","position","top","bottom","left","right","padding","backgroundColor"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,IAFF,EAOEC,UAPF,QAQO,cARP;AASA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAgBA,MAAMC,UAA2B,GAAG,QAU9B;AAAA,MAV+B;AACnCC,IAAAA,KAAK,GAAGH,MAAM,CAACI,YADoB;AAEnCC,IAAAA,KAFmC;AAGnCC,IAAAA,QAHmC;AAInCC,IAAAA,WAAW,GAAG,GAJqB;AAKnCC,IAAAA,SAAS,GAAG,CALuB;AAMnCC,IAAAA,KANmC;AAOnCC,IAAAA,UAPmC;AAQnCC,IAAAA,aARmC;AASnCC,IAAAA;AATmC,GAU/B;AACJ,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,cAAd;AAA8BC,IAAAA,KAA9B;AAAqCC,IAAAA;AAArC,MAAgDrB,UAAU,CAACsB,OAAX,CACpDR,KAAK,IAAI,EAD2C,CAAtD;AAGA,QAAMS,WAAW,GAAGH,KAAK,IAAIC,MAAT,GAAkB;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAlB,GAAsC;AAAET,IAAAA;AAAF,GAA1D;AACA,sBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,EAAgBC,KAAhB;AAAhB,kBACE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAE,CAACG,OADb;AAEE,IAAA,OAAO,EAAEA,OAFX;AAGE,IAAA,KAAK,EAAE,SAAiB;AAAA,UAAhB;AAAEO,QAAAA;AAAF,OAAgB;AACtB,aAAO,CACL;AACEC,QAAAA,OAAO,EAAED,OAAO,GAAG,GAAH,GAAS;AAD3B,OADK,CAAP;AAKD;AATH,kBAWE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAED,WADT;AAEE,IAAA,MAAM,EAAE,OAAOf,KAAP,KAAiB,QAAjB,GAA4B;AAAEkB,MAAAA,GAAG,EAAElB;AAAP,KAA5B,GAA6CA,KAFvD;AAGE,IAAA,UAAU,EAAC;AAHb,IAXF,eAgBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACmB,MAAM,CAACC,OAAR,EAAiB;AAAET,MAAAA,cAAF;AAAkBD,MAAAA;AAAlB,KAAjB;AAAb,KACGR,KAAK,gBACJ,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAC;AAAEmB,MAAAA,KAAK,EAAE;AAAT,KAAD,EAAqBd,UAArB,CAAd;AAAgD,IAAA,IAAI,EAAEL;AAAtD,IADI,GAEF,IAHN,EAIGC,QAAQ,gBACP,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE,CAAC;AAAEkB,MAAAA,KAAK,EAAE;AAAT,KAAD,EAAwCb,aAAxC,CADT;AAEE,IAAA,IAAI,EAAEL;AAFR,IADO,GAKL,IATN,CAhBF,CADF,CADF;AAgCD,CA/CD;;AAiDA,MAAMgB,MAAM,GAAG3B,UAAU,CAAC8B,MAAX,CAAkB;AAC/BF,EAAAA,OAAO,EAAE;AACPG,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,GAAG,EAAE,CAFE;AAGPC,IAAAA,MAAM,EAAE,CAHD;AAIPC,IAAAA,IAAI,EAAE,CAJC;AAKPC,IAAAA,KAAK,EAAE,CALA;AAMPC,IAAAA,OAAO,EAAE,EANF;AAOPC,IAAAA,eAAe,EAAE;AAPV;AADsB,CAAlB,CAAf;AAYA,eAAe/B,SAAS,CAACC,UAAD,CAAxB","sourcesContent":["// @ts-nocheck\nimport React from \"react\";\nimport {\n  Pressable,\n  View,\n  ImageSourcePropType,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  StyleSheet,\n} from \"react-native\";\nimport { Title, Subtitle } from \"./Typography\";\nimport Image from \"./Image\";\nimport Surface from \"./Surface\";\nimport Config from \"./Config\";\nimport { withTheme } from \"../theming\";\nimport theme from \"../styles/DefaultTheme\";\n\ntype Props = {\n  image?: string | ImageSourcePropType;\n  title?: string;\n  subtitle?: string;\n  aspectRatio?: number;\n  elevation?: number;\n  theme: typeof theme;\n  style?: StyleProp<ViewStyle>;\n  titleStyle?: StyleProp<TextStyle>;\n  subtitleStyle?: StyleProp<TextStyle>;\n  onPress: () => void;\n};\n\nconst CardInline: React.FC<Props> = ({\n  image = Config.cardImageUrl,\n  title,\n  subtitle,\n  aspectRatio = 1.5,\n  elevation = 2,\n  style,\n  titleStyle,\n  subtitleStyle,\n  onPress,\n}) => {\n  const { alignItems, justifyContent, width, height } = StyleSheet.flatten(\n    style || {}\n  );\n  const imageStyles = width && height ? { width, height } : { aspectRatio };\n  return (\n    <Surface style={[{ elevation }, style]}>\n      <Pressable\n        disabled={!onPress}\n        onPress={onPress}\n        style={({ pressed }) => {\n          return [\n            {\n              opacity: pressed ? 0.8 : 1,\n            },\n          ];\n        }}\n      >\n        <Image\n          style={imageStyles}\n          source={typeof image === \"string\" ? { uri: image } : image}\n          resizeMode=\"cover\"\n        />\n        <View style={[styles.overlay, { justifyContent, alignItems }]}>\n          {title ? (\n            <Title style={[{ color: \"white\" }, titleStyle]} text={title} />\n          ) : null}\n          {subtitle ? (\n            <Subtitle\n              style={[{ color: \"rgba(255, 255, 255, 0.7)\" }, subtitleStyle]}\n              text={subtitle}\n            />\n          ) : null}\n        </View>\n      </Pressable>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  overlay: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: 16,\n    backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n  },\n});\n\nexport default withTheme(CardInline);\n"]}